<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.1208.1036                               -->
<workbook original-version='18.1' source-build='2020.3.4 (20203.20.1208.1036)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CustomReferenceLineTooltips />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='2020.12.21_final data (2020.12.21_final data)' inline='true' name='federated.17byxqo0apwjvg1e95pdt1mp846j' version='18.1'>
      <connection class='federated' tableau-ri='true'>
        <named-connections>
          <named-connection caption='2020.12.21_final data' name='excel-direct.0tqwz2g1rq6dxm128wzrg00ofeqf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/ferris/Dropbox/Data Science/MSc Applied Information and Data Science/Semester 01/Computer Science Concepts for Data Scientists/Project/Data/Final Set/2020.12.21_final data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0tqwz2g1rq6dxm128wzrg00ofeqf' name='2020.12.21_final data' table='[&apos;2020#12#21_final data$&apos;]' type='table'>
          <columns gridOrigin='A1:Q4868:no:A1:Q4868:0' header='yes' outcome='6'>
            <column datatype='integer' name='No' ordinal='0' />
            <column datatype='string' name='county' ordinal='1' />
            <column datatype='string' name='state' ordinal='2' />
            <column datatype='real' name='percentage20_Donald_Trump' ordinal='3' />
            <column datatype='real' name='percentage20_Joe_Biden' ordinal='4' />
            <column datatype='integer' name='total_votes20' ordinal='5' />
            <column datatype='integer' name='votes20_Donald_Trump' ordinal='6' />
            <column datatype='integer' name='votes20_Joe_Biden' ordinal='7' />
            <column datatype='real' name='lat' ordinal='8' />
            <column datatype='real' name='long' ordinal='9' />
            <column datatype='integer' name='cases' ordinal='10' />
            <column datatype='integer' name='deaths' ordinal='11' />
            <column datatype='integer' name='TotalPop' ordinal='12' />
            <column datatype='integer' name='Men' ordinal='13' />
            <column datatype='integer' name='Women' ordinal='14' />
            <column datatype='boolean' name='Trump Won State' ordinal='15' />
            <column datatype='string' name='county_party' ordinal='16' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0tqwz2g1rq6dxm128wzrg00ofeqf' name='2020.12.21_final data' table='[&apos;2020#12#21_final data$&apos;]' type='table'>
          <columns gridOrigin='A1:Q4868:no:A1:Q4868:0' header='yes' outcome='6'>
            <column datatype='integer' name='No' ordinal='0' />
            <column datatype='string' name='county' ordinal='1' />
            <column datatype='string' name='state' ordinal='2' />
            <column datatype='real' name='percentage20_Donald_Trump' ordinal='3' />
            <column datatype='real' name='percentage20_Joe_Biden' ordinal='4' />
            <column datatype='integer' name='total_votes20' ordinal='5' />
            <column datatype='integer' name='votes20_Donald_Trump' ordinal='6' />
            <column datatype='integer' name='votes20_Joe_Biden' ordinal='7' />
            <column datatype='real' name='lat' ordinal='8' />
            <column datatype='real' name='long' ordinal='9' />
            <column datatype='integer' name='cases' ordinal='10' />
            <column datatype='integer' name='deaths' ordinal='11' />
            <column datatype='integer' name='TotalPop' ordinal='12' />
            <column datatype='integer' name='Men' ordinal='13' />
            <column datatype='integer' name='Women' ordinal='14' />
            <column datatype='boolean' name='Trump Won State' ordinal='15' />
            <column datatype='string' name='county_party' ordinal='16' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2020.12.21_final data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Q4868:no:A1:Q4868:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No</remote-name>
            <remote-type>20</remote-type>
            <local-name>[No]</local-name>
            <parent-name>[2020.12.21_final data]</parent-name>
            <remote-alias>No</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020.12.21!final data_7F2F47F1C81C4E58BF99C47375854A70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county</remote-name>
            <remote-type>130</remote-type>
            <local-name>[county]</local-name>
            <parent-name>[2020.12.21_final data]</parent-name>
            <remote-alias>county</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020.12.21!final data_7F2F47F1C81C4E58BF99C47375854A70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[2020.12.21_final data]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020.12.21!final data_7F2F47F1C81C4E58BF99C47375854A70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentage20_Donald_Trump</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percentage20_Donald_Trump]</local-name>
            <parent-name>[2020.12.21_final data]</parent-name>
            <remote-alias>percentage20_Donald_Trump</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020.12.21!final data_7F2F47F1C81C4E58BF99C47375854A70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentage20_Joe_Biden</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percentage20_Joe_Biden]</local-name>
            <parent-name>[2020.12.21_final data]</parent-name>
            <remote-alias>percentage20_Joe_Biden</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020.12.21!final data_7F2F47F1C81C4E58BF99C47375854A70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_votes20</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_votes20]</local-name>
            <parent-name>[2020.12.21_final data]</parent-name>
            <remote-alias>total_votes20</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020.12.21!final data_7F2F47F1C81C4E58BF99C47375854A70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>votes20_Donald_Trump</remote-name>
            <remote-type>20</remote-type>
            <local-name>[votes20_Donald_Trump]</local-name>
            <parent-name>[2020.12.21_final data]</parent-name>
            <remote-alias>votes20_Donald_Trump</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020.12.21!final data_7F2F47F1C81C4E58BF99C47375854A70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>votes20_Joe_Biden</remote-name>
            <remote-type>20</remote-type>
            <local-name>[votes20_Joe_Biden]</local-name>
            <parent-name>[2020.12.21_final data]</parent-name>
            <remote-alias>votes20_Joe_Biden</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020.12.21!final data_7F2F47F1C81C4E58BF99C47375854A70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[2020.12.21_final data]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020.12.21!final data_7F2F47F1C81C4E58BF99C47375854A70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[long]</local-name>
            <parent-name>[2020.12.21_final data]</parent-name>
            <remote-alias>long</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020.12.21!final data_7F2F47F1C81C4E58BF99C47375854A70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases]</local-name>
            <parent-name>[2020.12.21_final data]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020.12.21!final data_7F2F47F1C81C4E58BF99C47375854A70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths]</local-name>
            <parent-name>[2020.12.21_final data]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020.12.21!final data_7F2F47F1C81C4E58BF99C47375854A70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalPop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalPop]</local-name>
            <parent-name>[2020.12.21_final data]</parent-name>
            <remote-alias>TotalPop</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020.12.21!final data_7F2F47F1C81C4E58BF99C47375854A70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Men</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Men]</local-name>
            <parent-name>[2020.12.21_final data]</parent-name>
            <remote-alias>Men</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020.12.21!final data_7F2F47F1C81C4E58BF99C47375854A70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Women</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Women]</local-name>
            <parent-name>[2020.12.21_final data]</parent-name>
            <remote-alias>Women</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020.12.21!final data_7F2F47F1C81C4E58BF99C47375854A70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trump Won State</remote-name>
            <remote-type>11</remote-type>
            <local-name>[Trump Won State]</local-name>
            <parent-name>[2020.12.21_final data]</parent-name>
            <remote-alias>Trump Won State</remote-alias>
            <ordinal>15</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WINBOOL&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020.12.21!final data_7F2F47F1C81C4E58BF99C47375854A70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_party</remote-name>
            <remote-type>130</remote-type>
            <local-name>[county_party]</local-name>
            <parent-name>[2020.12.21_final data]</parent-name>
            <remote-alias>county_party</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020.12.21!final data_7F2F47F1C81C4E58BF99C47375854A70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.17byxqo0apwjvg1e95pdt1mp846j].[usr:Calculation_1642758393160933378:qk]&quot;' value='Biden' />
          <alias key='&quot;[federated.17byxqo0apwjvg1e95pdt1mp846j].[usr:Calculation_1642758393161060355:qk]&quot;' value='Trump' />
        </aliases>
      </column>
      <column caption='Cases / 100&apos;000' datatype='real' name='[Calculation_1642758393157255168]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([cases])/SUM([TotalPop])*100000' />
      </column>
      <column caption='Deaths / 100&apos;000' datatype='real' name='[Calculation_1642758393158111233]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([deaths])/SUM([TotalPop])*100000' />
      </column>
      <column caption='% Biden State' datatype='real' name='[Calculation_1642758393160933378]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([votes20_Joe_Biden]) / SUM([total_votes20])' />
      </column>
      <column caption='% Trump State' datatype='real' name='[Calculation_1642758393161060355]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([votes20_Donald_Trump]) / SUM([total_votes20])' />
      </column>
      <column caption='Deaths per 100&apos;000' datatype='real' name='[Calculation_2199093676208750592]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([deaths])/SUM([TotalPop])*100000' />
      </column>
      <column caption='Cases per 100&apos;000' datatype='real' name='[Calculation_2199093676208812033]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([cases])/SUM([TotalPop])*100000' />
      </column>
      <column caption='Hawaii Filter' datatype='boolean' name='[Calculation_6762717850056929280]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[state] = &quot;HI&quot; AND { FIXED : COUNTD( IF [Continental States Filter] THEN [state] END) } &gt; 1' />
      </column>
      <column caption='Alaska Filter' datatype='boolean' name='[Calculation_6762717850057240577]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[state] = &quot;AK&quot; AND { FIXED : COUNTD( IF [Continental States Filter] THEN [state] END) } &gt; 1' />
      </column>
      <column caption='Total Pop' datatype='integer' name='[TotalPop]' role='measure' type='quantitative' />
      <column datatype='boolean' name='[Trump Won State]' role='dimension' semantic-role='' type='nominal'>
        <aliases>
          <alias key='false' value='Biden' />
          <alias key='true' value='Trump' />
        </aliases>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='2020.12.21_final data' datatype='table' name='[__tableau_internal_object_id__].[2020.12.21!final data_7F2F47F1C81C4E58BF99C47375854A70]' role='measure' type='quantitative' />
      <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
      <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Governing Party' datatype='string' name='[county_party]' role='dimension' semantic-role='' type='nominal'>
        <aliases>
          <alias key='&quot;democrat&quot;' value='Democrat' />
          <alias key='&quot;republican&quot;' value='Republican' />
        </aliases>
      </column>
      <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='percentage20 Donald Trump' datatype='real' name='[percentage20_Donald_Trump]' role='measure' type='quantitative' />
      <column caption='percentage20 Joe Biden' datatype='real' name='[percentage20_Joe_Biden]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <aliases>
          <alias key='&quot;AK&quot;' value='Alaska' />
          <alias key='&quot;AL&quot;' value='Alabama' />
          <alias key='&quot;AR&quot;' value='Arkansas' />
          <alias key='&quot;AZ&quot;' value='Arizona' />
          <alias key='&quot;CA&quot;' value='California' />
          <alias key='&quot;CO&quot;' value='Colorado' />
          <alias key='&quot;CT&quot;' value='Connecticut' />
          <alias key='&quot;DC&quot;' value='District of Columbia' />
          <alias key='&quot;DE&quot;' value='Delaware' />
          <alias key='&quot;FL&quot;' value='Florida' />
          <alias key='&quot;GA&quot;' value='Georgia' />
          <alias key='&quot;HI&quot;' value='Hawaii' />
          <alias key='&quot;IA&quot;' value='Iowa' />
          <alias key='&quot;ID&quot;' value='Idaho' />
          <alias key='&quot;IL&quot;' value='Illinois' />
          <alias key='&quot;IN&quot;' value='Indiana' />
          <alias key='&quot;KS&quot;' value='Kansas' />
          <alias key='&quot;KY&quot;' value='Kentucky' />
          <alias key='&quot;LA&quot;' value='Louisiana' />
          <alias key='&quot;MA&quot;' value='Massachusetts' />
          <alias key='&quot;MD&quot;' value='Maryland' />
          <alias key='&quot;ME&quot;' value='Maine' />
          <alias key='&quot;MI&quot;' value='Michigan' />
          <alias key='&quot;MN&quot;' value='Minnesota' />
          <alias key='&quot;MO&quot;' value='Missouri' />
          <alias key='&quot;MS&quot;' value='Mississippi' />
          <alias key='&quot;MT&quot;' value='Montana' />
          <alias key='&quot;NC&quot;' value='North Carolina' />
          <alias key='&quot;ND&quot;' value='North Dakota' />
          <alias key='&quot;NE&quot;' value='Nebraska' />
          <alias key='&quot;NH&quot;' value='New Hampshire' />
          <alias key='&quot;NJ&quot;' value='New Jersey' />
          <alias key='&quot;NM&quot;' value='New Mexico' />
          <alias key='&quot;NV&quot;' value='Nevada' />
          <alias key='&quot;NY&quot;' value='New York' />
          <alias key='&quot;OH&quot;' value='Ohio' />
          <alias key='&quot;OK&quot;' value='Oklahoma' />
          <alias key='&quot;OR&quot;' value='Oregon' />
          <alias key='&quot;PA&quot;' value='Pennsylvania' />
          <alias key='&quot;RI&quot;' value='Rhode Island' />
          <alias key='&quot;SC&quot;' value='South Carolina' />
          <alias key='&quot;SD&quot;' value='South Dakota' />
          <alias key='&quot;TN&quot;' value='Tennessee' />
          <alias key='&quot;TX&quot;' value='Texas' />
          <alias key='&quot;UT&quot;' value='Utah' />
          <alias key='&quot;VA&quot;' value='Virginia' />
          <alias key='&quot;VT&quot;' value='Vermont' />
          <alias key='&quot;WA&quot;' value='Washington' />
          <alias key='&quot;WI&quot;' value='Wisconsin' />
          <alias key='&quot;WV&quot;' value='West Virginia' />
          <alias key='&quot;WY&quot;' value='Wyoming' />
        </aliases>
      </column>
      <column caption='Total Votes20' datatype='integer' name='[total_votes20]' role='measure' type='quantitative' />
      <column caption='votes20 Donald Trump' datatype='integer' name='[votes20_Donald_Trump]' role='measure' type='quantitative' />
      <column caption='votes20 Joe Biden' datatype='integer' name='[votes20_Joe_Biden]' role='measure' type='quantitative' />
      <column-instance column='[Trump Won State]' derivation='None' name='[none:Trump Won State:nk]' pivot='key' type='nominal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[percentage20_Donald_Trump]' derivation='Sum' name='[sum:percentage20_Donald_Trump:qk]' pivot='key' type='quantitative' />
      <column-instance column='[percentage20_Joe_Biden]' derivation='Sum' name='[sum:percentage20_Joe_Biden:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1642758393157255168]' derivation='User' name='[usr:Calculation_1642758393157255168:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1642758393158111233]' derivation='User' name='[usr:Calculation_1642758393158111233:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1642758393160933378]' derivation='User' name='[usr:Calculation_1642758393160933378:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1642758393161060355]' derivation='User' name='[usr:Calculation_1642758393161060355:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2199093676208750592]' derivation='User' name='[usr:Calculation_2199093676208750592:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2199093676208812033]' derivation='User' name='[usr:Calculation_2199093676208812033:qk]' pivot='key' type='quantitative' />
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (Trump won,State)' hidden='true' name='[Action (Trump won,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Trump won]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (state)' hidden='true' name='[Action (state)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Continental States Filter' name='[Continental States Filter]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='[state] != &quot;AK&quot; AND [state] != &quot;HI&quot;' function='filter' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <group caption='Tooltip (State)' hidden='true' name='[Tooltip (State)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Trump Won State,State)' hidden='true' name='[Tooltip (Trump Won State,State)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Trump Won State]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Trump Won State,state)' hidden='true' name='[Tooltip (Trump Won State,state)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Trump Won State]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (state)' hidden='true' name='[Tooltip (state)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.961279' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.0387205' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Trump Won State:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>false</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.17byxqo0apwjvg1e95pdt1mp846j].[sum:percentage20_Joe_Biden:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.17byxqo0apwjvg1e95pdt1mp846j].[usr:\% Trump 2020 (copy)_6072963414369628168:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.17byxqo0apwjvg1e95pdt1mp846j].[usr:Calculation_1642758393160933378:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.17byxqo0apwjvg1e95pdt1mp846j].[usr:Calculation_1642758393158111233:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.17byxqo0apwjvg1e95pdt1mp846j].[usr:Calculation_2199093676208750592:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.17byxqo0apwjvg1e95pdt1mp846j].[none:Trump Won State:nk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.17byxqo0apwjvg1e95pdt1mp846j].[none:Trump won:nk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.17byxqo0apwjvg1e95pdt1mp846j].[usr:Calculation_1642758393157255168:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.17byxqo0apwjvg1e95pdt1mp846j].[usr:Calculation_2199093676208812033:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.17byxqo0apwjvg1e95pdt1mp846j].[attr:percentage20_Donald_Trump:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.17byxqo0apwjvg1e95pdt1mp846j].[sum:percentage20_Donald_Trump:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.17byxqo0apwjvg1e95pdt1mp846j].[usr:Calculation_1642758393161060355:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.17byxqo0apwjvg1e95pdt1mp846j].[usr:Calculation_6072963414351130624:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.17byxqo0apwjvg1e95pdt1mp846j].[attr:percentage20_Joe_Biden:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[Parameters].[Parameter 1]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;USA&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column caption='50' datatype='real' default-format='N' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='0.5'>
          <calculation class='tableau' formula='0.5' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='2020.12.21_final data' id='2020.12.21!final data_7F2F47F1C81C4E58BF99C47375854A70'>
            <properties context=''>
              <relation connection='excel-direct.0tqwz2g1rq6dxm128wzrg00ofeqf' name='2020.12.21_final data' table='[&apos;2020#12#21_final data$&apos;]' type='table'>
                <columns gridOrigin='A1:Q4868:no:A1:Q4868:0' header='yes' outcome='6'>
                  <column datatype='integer' name='No' ordinal='0' />
                  <column datatype='string' name='county' ordinal='1' />
                  <column datatype='string' name='state' ordinal='2' />
                  <column datatype='real' name='percentage20_Donald_Trump' ordinal='3' />
                  <column datatype='real' name='percentage20_Joe_Biden' ordinal='4' />
                  <column datatype='integer' name='total_votes20' ordinal='5' />
                  <column datatype='integer' name='votes20_Donald_Trump' ordinal='6' />
                  <column datatype='integer' name='votes20_Joe_Biden' ordinal='7' />
                  <column datatype='real' name='lat' ordinal='8' />
                  <column datatype='real' name='long' ordinal='9' />
                  <column datatype='integer' name='cases' ordinal='10' />
                  <column datatype='integer' name='deaths' ordinal='11' />
                  <column datatype='integer' name='TotalPop' ordinal='12' />
                  <column datatype='integer' name='Men' ordinal='13' />
                  <column datatype='integer' name='Women' ordinal='14' />
                  <column datatype='boolean' name='Trump Won State' ordinal='15' />
                  <column datatype='string' name='county_party' ordinal='16' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='50' datatype='real' default-format='N' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='0.5'>
        <calculation class='tableau' formula='0.5' />
      </column>
    </datasource>
    <datasource caption='outputfinal' inline='true' name='federated.05l3lsc1hriqho1g4od7f0wiri4d' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='outputfinal' name='textscan.1d6h70y1dqzvbi1gx7v0o1tnokc6'>
            <connection class='textscan' directory='/Users/ferris/Dropbox/Data Science/MSc Applied Information and Data Science/Semester 01/Computer Science Concepts for Data Scientists/Project/Data/Final Set' filename='outputfinal.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1d6h70y1dqzvbi1gx7v0o1tnokc6' name='outputfinal.csv' table='[outputfinal#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='county' ordinal='1' />
            <column datatype='string' name='state' ordinal='2' />
            <column datatype='real' name='percentage20_Donald_Trump' ordinal='3' />
            <column datatype='real' name='percentage20_Joe_Biden' ordinal='4' />
            <column datatype='integer' name='total_votes20' ordinal='5' />
            <column datatype='integer' name='votes20_Donald_Trump' ordinal='6' />
            <column datatype='integer' name='votes20_Joe_Biden' ordinal='7' />
            <column datatype='real' name='lat' ordinal='8' />
            <column datatype='real' name='long' ordinal='9' />
            <column datatype='integer' name='cases' ordinal='10' />
            <column datatype='integer' name='deaths' ordinal='11' />
            <column datatype='integer' name='TotalPop' ordinal='12' />
            <column datatype='integer' name='Men' ordinal='13' />
            <column datatype='integer' name='Women' ordinal='14' />
            <column datatype='boolean' name='Trump Won State' ordinal='15' />
            <column datatype='string' name='state_governing_party' ordinal='16' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1d6h70y1dqzvbi1gx7v0o1tnokc6' name='outputfinal.csv' table='[outputfinal#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='county' ordinal='1' />
            <column datatype='string' name='state' ordinal='2' />
            <column datatype='real' name='percentage20_Donald_Trump' ordinal='3' />
            <column datatype='real' name='percentage20_Joe_Biden' ordinal='4' />
            <column datatype='integer' name='total_votes20' ordinal='5' />
            <column datatype='integer' name='votes20_Donald_Trump' ordinal='6' />
            <column datatype='integer' name='votes20_Joe_Biden' ordinal='7' />
            <column datatype='real' name='lat' ordinal='8' />
            <column datatype='real' name='long' ordinal='9' />
            <column datatype='integer' name='cases' ordinal='10' />
            <column datatype='integer' name='deaths' ordinal='11' />
            <column datatype='integer' name='TotalPop' ordinal='12' />
            <column datatype='integer' name='Men' ordinal='13' />
            <column datatype='integer' name='Women' ordinal='14' />
            <column datatype='boolean' name='Trump Won State' ordinal='15' />
            <column datatype='string' name='state_governing_party' ordinal='16' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[outputfinal.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;¤&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[outputfinal.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outputfinal.csv_A4FF0EE1421C4D348F5B19642A142A34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county]</local-name>
            <parent-name>[outputfinal.csv]</parent-name>
            <remote-alias>county</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outputfinal.csv_A4FF0EE1421C4D348F5B19642A142A34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[outputfinal.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outputfinal.csv_A4FF0EE1421C4D348F5B19642A142A34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentage20_Donald_Trump</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percentage20_Donald_Trump]</local-name>
            <parent-name>[outputfinal.csv]</parent-name>
            <remote-alias>percentage20_Donald_Trump</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outputfinal.csv_A4FF0EE1421C4D348F5B19642A142A34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentage20_Joe_Biden</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percentage20_Joe_Biden]</local-name>
            <parent-name>[outputfinal.csv]</parent-name>
            <remote-alias>percentage20_Joe_Biden</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outputfinal.csv_A4FF0EE1421C4D348F5B19642A142A34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_votes20</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_votes20]</local-name>
            <parent-name>[outputfinal.csv]</parent-name>
            <remote-alias>total_votes20</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outputfinal.csv_A4FF0EE1421C4D348F5B19642A142A34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>votes20_Donald_Trump</remote-name>
            <remote-type>20</remote-type>
            <local-name>[votes20_Donald_Trump]</local-name>
            <parent-name>[outputfinal.csv]</parent-name>
            <remote-alias>votes20_Donald_Trump</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outputfinal.csv_A4FF0EE1421C4D348F5B19642A142A34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>votes20_Joe_Biden</remote-name>
            <remote-type>20</remote-type>
            <local-name>[votes20_Joe_Biden]</local-name>
            <parent-name>[outputfinal.csv]</parent-name>
            <remote-alias>votes20_Joe_Biden</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outputfinal.csv_A4FF0EE1421C4D348F5B19642A142A34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[outputfinal.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outputfinal.csv_A4FF0EE1421C4D348F5B19642A142A34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[long]</local-name>
            <parent-name>[outputfinal.csv]</parent-name>
            <remote-alias>long</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outputfinal.csv_A4FF0EE1421C4D348F5B19642A142A34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases]</local-name>
            <parent-name>[outputfinal.csv]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outputfinal.csv_A4FF0EE1421C4D348F5B19642A142A34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths]</local-name>
            <parent-name>[outputfinal.csv]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outputfinal.csv_A4FF0EE1421C4D348F5B19642A142A34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalPop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalPop]</local-name>
            <parent-name>[outputfinal.csv]</parent-name>
            <remote-alias>TotalPop</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outputfinal.csv_A4FF0EE1421C4D348F5B19642A142A34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Men</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Men]</local-name>
            <parent-name>[outputfinal.csv]</parent-name>
            <remote-alias>Men</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outputfinal.csv_A4FF0EE1421C4D348F5B19642A142A34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Women</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Women]</local-name>
            <parent-name>[outputfinal.csv]</parent-name>
            <remote-alias>Women</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outputfinal.csv_A4FF0EE1421C4D348F5B19642A142A34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trump Won State</remote-name>
            <remote-type>11</remote-type>
            <local-name>[Trump Won State]</local-name>
            <parent-name>[outputfinal.csv]</parent-name>
            <remote-alias>Trump Won State</remote-alias>
            <ordinal>15</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outputfinal.csv_A4FF0EE1421C4D348F5B19642A142A34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_governing_party</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_governing_party]</local-name>
            <parent-name>[outputfinal.csv]</parent-name>
            <remote-alias>state_governing_party</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[outputfinal.csv_A4FF0EE1421C4D348F5B19642A142A34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393160933378:qk]&quot;' value='Biden' />
          <alias key='&quot;[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393161060355:qk]&quot;' value='Trump' />
        </aliases>
      </column>
      <column caption='Cases / 100&apos;000' datatype='real' name='[Calculation_1642758393157255168]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([cases])/SUM([TotalPop])*100000' />
      </column>
      <column caption='Deaths / 100&apos;000' datatype='real' name='[Calculation_1642758393158111233]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([deaths])/SUM([TotalPop])*100000' />
      </column>
      <column caption='% Biden State' datatype='real' name='[Calculation_1642758393160933378]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([votes20_Joe_Biden]) / SUM([total_votes20])' />
      </column>
      <column caption='% Trump State' datatype='real' name='[Calculation_1642758393161060355]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([votes20_Donald_Trump]) / SUM([total_votes20])' />
      </column>
      <column caption='Hawaii Filter' datatype='boolean' name='[Calculation_6762717850056929280]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[state] = &quot;HI&quot; AND { FIXED : COUNTD( IF [Continental States Filter] THEN [state] END) } &gt; 1' />
      </column>
      <column caption='Alaska Filter' datatype='boolean' name='[Calculation_6762717850057240577]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[state] = &quot;AK&quot; AND { FIXED : COUNTD( IF [Continental States Filter] THEN [state] END) } &gt; 1' />
      </column>
      <column caption='Total Pop' datatype='integer' name='[TotalPop]' role='measure' type='quantitative' />
      <column datatype='boolean' name='[Trump Won State]' role='dimension' type='nominal'>
        <aliases>
          <alias key='false' value='Biden' />
          <alias key='true' value='Trump' />
        </aliases>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='outputfinal.csv' datatype='table' name='[__tableau_internal_object_id__].[outputfinal.csv_A4FF0EE1421C4D348F5B19642A142A34]' role='measure' type='quantitative' />
      <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
      <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='percentage20 Donald Trump' datatype='real' name='[percentage20_Donald_Trump]' role='measure' type='quantitative' />
      <column caption='percentage20 Joe Biden' datatype='real' name='[percentage20_Joe_Biden]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <aliases>
          <alias key='&quot;AK&quot;' value='Alaska' />
          <alias key='&quot;AL&quot;' value='Alabama' />
          <alias key='&quot;AR&quot;' value='Arkansas' />
          <alias key='&quot;AZ&quot;' value='Arizona' />
          <alias key='&quot;CA&quot;' value='California' />
          <alias key='&quot;CO&quot;' value='Colorado' />
          <alias key='&quot;CT&quot;' value='Connecticut' />
          <alias key='&quot;DC&quot;' value='District of Columbia' />
          <alias key='&quot;DE&quot;' value='Delaware' />
          <alias key='&quot;FL&quot;' value='Florida' />
          <alias key='&quot;GA&quot;' value='Georgia' />
          <alias key='&quot;HI&quot;' value='Hawaii' />
          <alias key='&quot;IA&quot;' value='Iowa' />
          <alias key='&quot;ID&quot;' value='Idaho' />
          <alias key='&quot;IL&quot;' value='Illinois' />
          <alias key='&quot;IN&quot;' value='Indiana' />
          <alias key='&quot;KS&quot;' value='Kansas' />
          <alias key='&quot;KY&quot;' value='Kentucky' />
          <alias key='&quot;LA&quot;' value='Louisiana' />
          <alias key='&quot;MA&quot;' value='Massachusetts' />
          <alias key='&quot;MD&quot;' value='Maryland' />
          <alias key='&quot;ME&quot;' value='Maine' />
          <alias key='&quot;MI&quot;' value='Michigan' />
          <alias key='&quot;MN&quot;' value='Minnesota' />
          <alias key='&quot;MO&quot;' value='Missouri' />
          <alias key='&quot;MS&quot;' value='Mississippi' />
          <alias key='&quot;MT&quot;' value='Montana' />
          <alias key='&quot;NC&quot;' value='North Carolina' />
          <alias key='&quot;ND&quot;' value='North Dakota' />
          <alias key='&quot;NE&quot;' value='Nebraska' />
          <alias key='&quot;NH&quot;' value='New Hampshire' />
          <alias key='&quot;NJ&quot;' value='New Jersey' />
          <alias key='&quot;NM&quot;' value='New Mexico' />
          <alias key='&quot;NV&quot;' value='Nevada' />
          <alias key='&quot;NY&quot;' value='New York' />
          <alias key='&quot;OH&quot;' value='Ohio' />
          <alias key='&quot;OK&quot;' value='Oklahoma' />
          <alias key='&quot;OR&quot;' value='Oregon' />
          <alias key='&quot;PA&quot;' value='Pennsylvania' />
          <alias key='&quot;RI&quot;' value='Rhode Island' />
          <alias key='&quot;SC&quot;' value='South Carolina' />
          <alias key='&quot;SD&quot;' value='South Dakota' />
          <alias key='&quot;TN&quot;' value='Tennessee' />
          <alias key='&quot;TX&quot;' value='Texas' />
          <alias key='&quot;UT&quot;' value='Utah' />
          <alias key='&quot;VA&quot;' value='Virginia' />
          <alias key='&quot;VT&quot;' value='Vermont' />
          <alias key='&quot;WA&quot;' value='Washington' />
          <alias key='&quot;WI&quot;' value='Wisconsin' />
          <alias key='&quot;WV&quot;' value='West Virginia' />
          <alias key='&quot;WY&quot;' value='Wyoming' />
        </aliases>
      </column>
      <column caption='State Governing Party' datatype='string' name='[state_governing_party]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Total Votes20' datatype='integer' name='[total_votes20]' role='measure' type='quantitative' />
      <column caption='votes20 Donald Trump' datatype='integer' name='[votes20_Donald_Trump]' role='measure' type='quantitative' />
      <column caption='votes20 Joe Biden' datatype='integer' name='[votes20_Joe_Biden]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_6762717850057240577]' derivation='None' name='[none:Calculation_6762717850057240577:nk]' pivot='key' type='nominal' />
      <column-instance column='[Trump Won State]' derivation='None' name='[none:Trump Won State:nk]' pivot='key' type='nominal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[percentage20_Donald_Trump]' derivation='Sum' name='[sum:percentage20_Donald_Trump:qk]' pivot='key' type='quantitative' />
      <column-instance column='[percentage20_Joe_Biden]' derivation='Sum' name='[sum:percentage20_Joe_Biden:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1642758393157255168]' derivation='User' name='[usr:Calculation_1642758393157255168:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1642758393158111233]' derivation='User' name='[usr:Calculation_1642758393158111233:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1642758393160933378]' derivation='User' name='[usr:Calculation_1642758393160933378:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1642758393161060355]' derivation='User' name='[usr:Calculation_1642758393161060355:qk]' pivot='key' type='quantitative' />
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (Trump won,State)' hidden='true' name='[Action (Trump won,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Trump won]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (state)' hidden='true' name='[Action (state)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Continental States Filter' name='[Continental States Filter]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='[state] != &quot;AK&quot; AND [state] != &quot;HI&quot;' function='filter' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <group caption='Tooltip (State)' hidden='true' name='[Tooltip (State)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Trump Won State,State)' hidden='true' name='[Tooltip (Trump Won State,State)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Trump Won State]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Trump Won State,state)' hidden='true' name='[Tooltip (Trump Won State,state)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Trump Won State]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (state)' hidden='true' name='[Tooltip (state)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Trump Won State:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>false</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:percentage20_Joe_Biden:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:\% Trump 2020 (copy)_6072963414369628168:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393160933378:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_2199093676208750592:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Calculation_6762717850057240577:nk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump won:nk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_2199093676208812033:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.05l3lsc1hriqho1g4od7f0wiri4d].[attr:percentage20_Donald_Trump:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:percentage20_Donald_Trump:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393161060355:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_6072963414351130624:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.05l3lsc1hriqho1g4od7f0wiri4d].[attr:percentage20_Joe_Biden:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[Parameters].[Parameter 1]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;USA&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column caption='50' datatype='real' default-format='N' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='0.5'>
          <calculation class='tableau' formula='0.5' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='outputfinal.csv' id='outputfinal.csv_A4FF0EE1421C4D348F5B19642A142A34'>
            <properties context=''>
              <relation connection='textscan.1d6h70y1dqzvbi1gx7v0o1tnokc6' name='outputfinal.csv' table='[outputfinal#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='county' ordinal='1' />
                  <column datatype='string' name='state' ordinal='2' />
                  <column datatype='real' name='percentage20_Donald_Trump' ordinal='3' />
                  <column datatype='real' name='percentage20_Joe_Biden' ordinal='4' />
                  <column datatype='integer' name='total_votes20' ordinal='5' />
                  <column datatype='integer' name='votes20_Donald_Trump' ordinal='6' />
                  <column datatype='integer' name='votes20_Joe_Biden' ordinal='7' />
                  <column datatype='real' name='lat' ordinal='8' />
                  <column datatype='real' name='long' ordinal='9' />
                  <column datatype='integer' name='cases' ordinal='10' />
                  <column datatype='integer' name='deaths' ordinal='11' />
                  <column datatype='integer' name='TotalPop' ordinal='12' />
                  <column datatype='integer' name='Men' ordinal='13' />
                  <column datatype='integer' name='Women' ordinal='14' />
                  <column datatype='boolean' name='Trump Won State' ordinal='15' />
                  <column datatype='string' name='state_governing_party' ordinal='16' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.05l3lsc1hriqho1g4od7f0wiri4d'>
      <datasources>
        <datasource caption='outputfinal' name='federated.05l3lsc1hriqho1g4od7f0wiri4d' />
      </datasources>
      <datasource-dependencies datasource='federated.05l3lsc1hriqho1g4od7f0wiri4d'>
        <column caption='Cases / 100&apos;000' datatype='real' name='[Calculation_1642758393157255168]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='SUM([cases])/SUM([TotalPop])*100000' />
        </column>
        <column caption='Deaths / 100&apos;000' datatype='real' name='[Calculation_1642758393158111233]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='SUM([deaths])/SUM([TotalPop])*100000' />
        </column>
        <column-instance column='[Calculation_1642758393157255168]' derivation='User' name='[usr:Calculation_1642758393157255168:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Calculation_1642758393158111233]' derivation='User' name='[usr:Calculation_1642758393158111233:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='quantitative' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]' included-values='in-range'>
        <min>351.5647513111636</min>
        <max>6042.1878667963374</max>
      </filter>
      <filter class='quantitative' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]' included-values='in-range'>
        <min>9.2854078215152516</min>
        <max>182.51904178953927</max>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <action caption='Highlight1' name='[Action2]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard' type='sheet' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Cases-Vote'>
      <layout-options>
        <title>
          <formatted-text>
            <run>COVID Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='outputfinal' name='federated.05l3lsc1hriqho1g4od7f0wiri4d' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.05l3lsc1hriqho1g4od7f0wiri4d'>
            <column caption='Cases / 100&apos;000' datatype='real' name='[Calculation_1642758393157255168]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([cases])/SUM([TotalPop])*100000' />
            </column>
            <column caption='Deaths / 100&apos;000' datatype='real' name='[Calculation_1642758393158111233]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([deaths])/SUM([TotalPop])*100000' />
            </column>
            <column caption='Total Pop' datatype='integer' name='[TotalPop]' role='measure' type='quantitative' />
            <column datatype='boolean' name='[Trump Won State]' role='dimension' type='nominal'>
              <aliases>
                <alias key='false' value='Biden' />
                <alias key='true' value='Trump' />
              </aliases>
            </column>
            <column-instance column='[state_governing_party]' derivation='Attribute' name='[attr:state_governing_party:nk]' pivot='key' type='nominal' />
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[Trump Won State]' derivation='None' name='[none:Trump Won State:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AK&quot;' value='Alaska' />
                <alias key='&quot;AL&quot;' value='Alabama' />
                <alias key='&quot;AR&quot;' value='Arkansas' />
                <alias key='&quot;AZ&quot;' value='Arizona' />
                <alias key='&quot;CA&quot;' value='California' />
                <alias key='&quot;CO&quot;' value='Colorado' />
                <alias key='&quot;CT&quot;' value='Connecticut' />
                <alias key='&quot;DC&quot;' value='District of Columbia' />
                <alias key='&quot;DE&quot;' value='Delaware' />
                <alias key='&quot;FL&quot;' value='Florida' />
                <alias key='&quot;GA&quot;' value='Georgia' />
                <alias key='&quot;HI&quot;' value='Hawaii' />
                <alias key='&quot;IA&quot;' value='Iowa' />
                <alias key='&quot;ID&quot;' value='Idaho' />
                <alias key='&quot;IL&quot;' value='Illinois' />
                <alias key='&quot;IN&quot;' value='Indiana' />
                <alias key='&quot;KS&quot;' value='Kansas' />
                <alias key='&quot;KY&quot;' value='Kentucky' />
                <alias key='&quot;LA&quot;' value='Louisiana' />
                <alias key='&quot;MA&quot;' value='Massachusetts' />
                <alias key='&quot;MD&quot;' value='Maryland' />
                <alias key='&quot;ME&quot;' value='Maine' />
                <alias key='&quot;MI&quot;' value='Michigan' />
                <alias key='&quot;MN&quot;' value='Minnesota' />
                <alias key='&quot;MO&quot;' value='Missouri' />
                <alias key='&quot;MS&quot;' value='Mississippi' />
                <alias key='&quot;MT&quot;' value='Montana' />
                <alias key='&quot;NC&quot;' value='North Carolina' />
                <alias key='&quot;ND&quot;' value='North Dakota' />
                <alias key='&quot;NE&quot;' value='Nebraska' />
                <alias key='&quot;NH&quot;' value='New Hampshire' />
                <alias key='&quot;NJ&quot;' value='New Jersey' />
                <alias key='&quot;NM&quot;' value='New Mexico' />
                <alias key='&quot;NV&quot;' value='Nevada' />
                <alias key='&quot;NY&quot;' value='New York' />
                <alias key='&quot;OH&quot;' value='Ohio' />
                <alias key='&quot;OK&quot;' value='Oklahoma' />
                <alias key='&quot;OR&quot;' value='Oregon' />
                <alias key='&quot;PA&quot;' value='Pennsylvania' />
                <alias key='&quot;RI&quot;' value='Rhode Island' />
                <alias key='&quot;SC&quot;' value='South Carolina' />
                <alias key='&quot;SD&quot;' value='South Dakota' />
                <alias key='&quot;TN&quot;' value='Tennessee' />
                <alias key='&quot;TX&quot;' value='Texas' />
                <alias key='&quot;UT&quot;' value='Utah' />
                <alias key='&quot;VA&quot;' value='Virginia' />
                <alias key='&quot;VT&quot;' value='Vermont' />
                <alias key='&quot;WA&quot;' value='Washington' />
                <alias key='&quot;WI&quot;' value='Wisconsin' />
                <alias key='&quot;WV&quot;' value='West Virginia' />
                <alias key='&quot;WY&quot;' value='Wyoming' />
              </aliases>
            </column>
            <column caption='State Governing Party' datatype='string' name='[state_governing_party]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[votes20_Donald_Trump]' derivation='Sum' name='[sum:votes20_Donald_Trump:qk]' pivot='key' type='quantitative' />
            <column-instance column='[votes20_Joe_Biden]' derivation='Sum' name='[sum:votes20_Joe_Biden:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1642758393157255168]' derivation='User' name='[usr:Calculation_1642758393157255168:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1642758393158111233]' derivation='User' name='[usr:Calculation_1642758393158111233:qk]' pivot='key' type='quantitative' />
            <column caption='votes20 Donald Trump' datatype='integer' name='[votes20_Donald_Trump]' role='measure' type='quantitative' />
            <column caption='votes20 Joe Biden' datatype='integer' name='[votes20_Joe_Biden]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Action (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Action (state)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Trump Won State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Action (State)]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Action (state)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]' value='2020 Presidential Election Winner'>
              <formatted-text>
                <run>2020 Presidential Election Winner</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]' />
              <tooltip column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]' />
              <tooltip column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]' />
              <tooltip column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:votes20_Donald_Trump:qk]' />
              <tooltip column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:votes20_Joe_Biden:qk]' />
              <tooltip column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[attr:state_governing_party:nk]' />
              <text column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]' />
              <color column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14'>State:&#9;</run>
                <run bold='true' fontsize='14'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11'>Governing Party:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[attr:state_governing_party:nk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'>COVID Data:</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Cases per 100&apos;000:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Deaths per 100&apos;000:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]>]]></run>
                <run>Æ&#10;&#10;&#10;</run>
                <run bold='true'>Election Data:</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Donald Trump:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:votes20_Donald_Trump:qk]> votes]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Joe Biden:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:votes20_Joe_Biden:qk]> votes]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Election" maxwidth="300" maxheight="175" filter="<All Fields>">]]></run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{AF6DDEA1-19F1-42E0-A14A-AF5556A3B14F}' />
    </worksheet>
    <worksheet name='Deaths-Vote'>
      <layout-options>
        <title>
          <formatted-text>
            <run>COVID Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='outputfinal' name='federated.05l3lsc1hriqho1g4od7f0wiri4d' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.05l3lsc1hriqho1g4od7f0wiri4d'>
            <column caption='Cases / 100&apos;000' datatype='real' name='[Calculation_1642758393157255168]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([cases])/SUM([TotalPop])*100000' />
            </column>
            <column caption='Deaths / 100&apos;000' datatype='real' name='[Calculation_1642758393158111233]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([deaths])/SUM([TotalPop])*100000' />
            </column>
            <column caption='Total Pop' datatype='integer' name='[TotalPop]' role='measure' type='quantitative' />
            <column datatype='boolean' name='[Trump Won State]' role='dimension' type='nominal'>
              <aliases>
                <alias key='false' value='Biden' />
                <alias key='true' value='Trump' />
              </aliases>
            </column>
            <column-instance column='[state_governing_party]' derivation='Attribute' name='[attr:state_governing_party:nk]' pivot='key' type='nominal' />
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[Trump Won State]' derivation='None' name='[none:Trump Won State:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AK&quot;' value='Alaska' />
                <alias key='&quot;AL&quot;' value='Alabama' />
                <alias key='&quot;AR&quot;' value='Arkansas' />
                <alias key='&quot;AZ&quot;' value='Arizona' />
                <alias key='&quot;CA&quot;' value='California' />
                <alias key='&quot;CO&quot;' value='Colorado' />
                <alias key='&quot;CT&quot;' value='Connecticut' />
                <alias key='&quot;DC&quot;' value='District of Columbia' />
                <alias key='&quot;DE&quot;' value='Delaware' />
                <alias key='&quot;FL&quot;' value='Florida' />
                <alias key='&quot;GA&quot;' value='Georgia' />
                <alias key='&quot;HI&quot;' value='Hawaii' />
                <alias key='&quot;IA&quot;' value='Iowa' />
                <alias key='&quot;ID&quot;' value='Idaho' />
                <alias key='&quot;IL&quot;' value='Illinois' />
                <alias key='&quot;IN&quot;' value='Indiana' />
                <alias key='&quot;KS&quot;' value='Kansas' />
                <alias key='&quot;KY&quot;' value='Kentucky' />
                <alias key='&quot;LA&quot;' value='Louisiana' />
                <alias key='&quot;MA&quot;' value='Massachusetts' />
                <alias key='&quot;MD&quot;' value='Maryland' />
                <alias key='&quot;ME&quot;' value='Maine' />
                <alias key='&quot;MI&quot;' value='Michigan' />
                <alias key='&quot;MN&quot;' value='Minnesota' />
                <alias key='&quot;MO&quot;' value='Missouri' />
                <alias key='&quot;MS&quot;' value='Mississippi' />
                <alias key='&quot;MT&quot;' value='Montana' />
                <alias key='&quot;NC&quot;' value='North Carolina' />
                <alias key='&quot;ND&quot;' value='North Dakota' />
                <alias key='&quot;NE&quot;' value='Nebraska' />
                <alias key='&quot;NH&quot;' value='New Hampshire' />
                <alias key='&quot;NJ&quot;' value='New Jersey' />
                <alias key='&quot;NM&quot;' value='New Mexico' />
                <alias key='&quot;NV&quot;' value='Nevada' />
                <alias key='&quot;NY&quot;' value='New York' />
                <alias key='&quot;OH&quot;' value='Ohio' />
                <alias key='&quot;OK&quot;' value='Oklahoma' />
                <alias key='&quot;OR&quot;' value='Oregon' />
                <alias key='&quot;PA&quot;' value='Pennsylvania' />
                <alias key='&quot;RI&quot;' value='Rhode Island' />
                <alias key='&quot;SC&quot;' value='South Carolina' />
                <alias key='&quot;SD&quot;' value='South Dakota' />
                <alias key='&quot;TN&quot;' value='Tennessee' />
                <alias key='&quot;TX&quot;' value='Texas' />
                <alias key='&quot;UT&quot;' value='Utah' />
                <alias key='&quot;VA&quot;' value='Virginia' />
                <alias key='&quot;VT&quot;' value='Vermont' />
                <alias key='&quot;WA&quot;' value='Washington' />
                <alias key='&quot;WI&quot;' value='Wisconsin' />
                <alias key='&quot;WV&quot;' value='West Virginia' />
                <alias key='&quot;WY&quot;' value='Wyoming' />
              </aliases>
            </column>
            <column caption='State Governing Party' datatype='string' name='[state_governing_party]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[votes20_Donald_Trump]' derivation='Sum' name='[sum:votes20_Donald_Trump:qk]' pivot='key' type='quantitative' />
            <column-instance column='[votes20_Joe_Biden]' derivation='Sum' name='[sum:votes20_Joe_Biden:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1642758393157255168]' derivation='User' name='[usr:Calculation_1642758393157255168:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1642758393158111233]' derivation='User' name='[usr:Calculation_1642758393158111233:qk]' pivot='key' type='quantitative' />
            <column caption='votes20 Donald Trump' datatype='integer' name='[votes20_Donald_Trump]' role='measure' type='quantitative' />
            <column caption='votes20 Joe Biden' datatype='integer' name='[votes20_Joe_Biden]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Action (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Action (state)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Trump Won State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Action (State)]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Action (state)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]' />
              <tooltip column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]' />
              <tooltip column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]' />
              <tooltip column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:votes20_Donald_Trump:qk]' />
              <tooltip column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:votes20_Joe_Biden:qk]' />
              <tooltip column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[attr:state_governing_party:nk]' />
              <text column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]' />
              <color column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14'>State:&#9;</run>
                <run bold='true' fontsize='14'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11'>Governing Party:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[attr:state_governing_party:nk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'>COVID Data:</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Cases per 100&apos;000:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Deaths per 100&apos;000:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'>Election Data:</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Donald Trump:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:votes20_Donald_Trump:qk]> votes]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Joe Biden:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:votes20_Joe_Biden:qk]> votes]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Election" maxwidth="300" maxheight="175" filter="<All Fields>">]]></run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{76589FBE-54F5-411F-AA9E-A156C6F8F85B}' />
    </worksheet>
    <worksheet name='Election'>
      <layout-options>
        <title>
          <formatted-text>
            <run>2020 Presidential Election Results</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='outputfinal' name='federated.05l3lsc1hriqho1g4od7f0wiri4d' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='50' datatype='real' default-format='N' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='0.5'>
              <calculation class='tableau' formula='0.5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.05l3lsc1hriqho1g4od7f0wiri4d'>
            <column caption='Cases / 100&apos;000' datatype='real' name='[Calculation_1642758393157255168]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([cases])/SUM([TotalPop])*100000' />
            </column>
            <column caption='Deaths / 100&apos;000' datatype='real' name='[Calculation_1642758393158111233]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([deaths])/SUM([TotalPop])*100000' />
            </column>
            <column caption='% Biden State' datatype='real' name='[Calculation_1642758393160933378]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([votes20_Joe_Biden]) / SUM([total_votes20])' />
            </column>
            <column caption='% Trump State' datatype='real' name='[Calculation_1642758393161060355]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([votes20_Donald_Trump]) / SUM([total_votes20])' />
            </column>
            <column caption='Total Pop' datatype='integer' name='[TotalPop]' role='measure' type='quantitative' />
            <column datatype='boolean' name='[Trump Won State]' role='dimension' type='nominal'>
              <aliases>
                <alias key='false' value='Biden' />
                <alias key='true' value='Trump' />
              </aliases>
            </column>
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AK&quot;' value='Alaska' />
                <alias key='&quot;AL&quot;' value='Alabama' />
                <alias key='&quot;AR&quot;' value='Arkansas' />
                <alias key='&quot;AZ&quot;' value='Arizona' />
                <alias key='&quot;CA&quot;' value='California' />
                <alias key='&quot;CO&quot;' value='Colorado' />
                <alias key='&quot;CT&quot;' value='Connecticut' />
                <alias key='&quot;DC&quot;' value='District of Columbia' />
                <alias key='&quot;DE&quot;' value='Delaware' />
                <alias key='&quot;FL&quot;' value='Florida' />
                <alias key='&quot;GA&quot;' value='Georgia' />
                <alias key='&quot;HI&quot;' value='Hawaii' />
                <alias key='&quot;IA&quot;' value='Iowa' />
                <alias key='&quot;ID&quot;' value='Idaho' />
                <alias key='&quot;IL&quot;' value='Illinois' />
                <alias key='&quot;IN&quot;' value='Indiana' />
                <alias key='&quot;KS&quot;' value='Kansas' />
                <alias key='&quot;KY&quot;' value='Kentucky' />
                <alias key='&quot;LA&quot;' value='Louisiana' />
                <alias key='&quot;MA&quot;' value='Massachusetts' />
                <alias key='&quot;MD&quot;' value='Maryland' />
                <alias key='&quot;ME&quot;' value='Maine' />
                <alias key='&quot;MI&quot;' value='Michigan' />
                <alias key='&quot;MN&quot;' value='Minnesota' />
                <alias key='&quot;MO&quot;' value='Missouri' />
                <alias key='&quot;MS&quot;' value='Mississippi' />
                <alias key='&quot;MT&quot;' value='Montana' />
                <alias key='&quot;NC&quot;' value='North Carolina' />
                <alias key='&quot;ND&quot;' value='North Dakota' />
                <alias key='&quot;NE&quot;' value='Nebraska' />
                <alias key='&quot;NH&quot;' value='New Hampshire' />
                <alias key='&quot;NJ&quot;' value='New Jersey' />
                <alias key='&quot;NM&quot;' value='New Mexico' />
                <alias key='&quot;NV&quot;' value='Nevada' />
                <alias key='&quot;NY&quot;' value='New York' />
                <alias key='&quot;OH&quot;' value='Ohio' />
                <alias key='&quot;OK&quot;' value='Oklahoma' />
                <alias key='&quot;OR&quot;' value='Oregon' />
                <alias key='&quot;PA&quot;' value='Pennsylvania' />
                <alias key='&quot;RI&quot;' value='Rhode Island' />
                <alias key='&quot;SC&quot;' value='South Carolina' />
                <alias key='&quot;SD&quot;' value='South Dakota' />
                <alias key='&quot;TN&quot;' value='Tennessee' />
                <alias key='&quot;TX&quot;' value='Texas' />
                <alias key='&quot;UT&quot;' value='Utah' />
                <alias key='&quot;VA&quot;' value='Virginia' />
                <alias key='&quot;VT&quot;' value='Vermont' />
                <alias key='&quot;WA&quot;' value='Washington' />
                <alias key='&quot;WI&quot;' value='Wisconsin' />
                <alias key='&quot;WV&quot;' value='West Virginia' />
                <alias key='&quot;WY&quot;' value='Wyoming' />
              </aliases>
            </column>
            <column caption='Total Votes20' datatype='integer' name='[total_votes20]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1642758393157255168]' derivation='User' name='[usr:Calculation_1642758393157255168:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1642758393158111233]' derivation='User' name='[usr:Calculation_1642758393158111233:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1642758393160933378]' derivation='User' name='[usr:Calculation_1642758393160933378:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1642758393161060355]' derivation='User' name='[usr:Calculation_1642758393161060355:qk]' pivot='key' type='quantitative' />
            <column caption='votes20 Donald Trump' datatype='integer' name='[votes20_Donald_Trump]' role='measure' type='quantitative' />
            <column caption='votes20 Joe Biden' datatype='integer' name='[votes20_Joe_Biden]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393160933378:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393161060355:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Tooltip (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action - Election]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Tooltip (Trump Won State,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Election]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Trump Won State]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Tooltip (Trump Won State,state)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Election]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Trump Won State]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Tooltip (state)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action - Election]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]'>
            <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[:Measure Names]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Tooltip (State)]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Tooltip (Trump Won State,State)]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Tooltip (Trump Won State,state)]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Tooltip (state)]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Multiple Values]' scope='rows' value='%' />
            <format attr='auto-subtitle' class='0' field='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' id='refline0' value='2' />
            <format attr='stroke-color' id='refline0' value='#edc948' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-table' tooltip-type='none' value-column='[Parameters].[Parameter 1]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Multiple Values]</rows>
        <cols>([federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk] / [federated.05l3lsc1hriqho1g4od7f0wiri4d].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{8BC43E95-A369-46D4-BE9D-F2A86C6AACF1}' />
    </worksheet>
    <worksheet name='Map_Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run>COVID Cases per 100&apos;000 Inhabitants</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='outputfinal' name='federated.05l3lsc1hriqho1g4od7f0wiri4d' />
            <datasource caption='2020.12.21_final data (2020.12.21_final data)' name='federated.17byxqo0apwjvg1e95pdt1mp846j' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.05l3lsc1hriqho1g4od7f0wiri4d'>
            <column caption='Cases / 100&apos;000' datatype='real' name='[Calculation_1642758393157255168]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([cases])/SUM([TotalPop])*100000' />
            </column>
            <column caption='Deaths / 100&apos;000' datatype='real' name='[Calculation_1642758393158111233]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([deaths])/SUM([TotalPop])*100000' />
            </column>
            <column caption='Total Pop' datatype='integer' name='[TotalPop]' role='measure' type='quantitative' />
            <column datatype='boolean' name='[Trump Won State]' role='dimension' type='nominal'>
              <aliases>
                <alias key='false' value='Biden' />
                <alias key='true' value='Trump' />
              </aliases>
            </column>
            <column-instance column='[state_governing_party]' derivation='Attribute' name='[attr:state_governing_party:nk]' pivot='key' type='nominal' />
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[Trump Won State]' derivation='None' name='[none:Trump Won State:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AK&quot;' value='Alaska' />
                <alias key='&quot;AL&quot;' value='Alabama' />
                <alias key='&quot;AR&quot;' value='Arkansas' />
                <alias key='&quot;AZ&quot;' value='Arizona' />
                <alias key='&quot;CA&quot;' value='California' />
                <alias key='&quot;CO&quot;' value='Colorado' />
                <alias key='&quot;CT&quot;' value='Connecticut' />
                <alias key='&quot;DC&quot;' value='District of Columbia' />
                <alias key='&quot;DE&quot;' value='Delaware' />
                <alias key='&quot;FL&quot;' value='Florida' />
                <alias key='&quot;GA&quot;' value='Georgia' />
                <alias key='&quot;HI&quot;' value='Hawaii' />
                <alias key='&quot;IA&quot;' value='Iowa' />
                <alias key='&quot;ID&quot;' value='Idaho' />
                <alias key='&quot;IL&quot;' value='Illinois' />
                <alias key='&quot;IN&quot;' value='Indiana' />
                <alias key='&quot;KS&quot;' value='Kansas' />
                <alias key='&quot;KY&quot;' value='Kentucky' />
                <alias key='&quot;LA&quot;' value='Louisiana' />
                <alias key='&quot;MA&quot;' value='Massachusetts' />
                <alias key='&quot;MD&quot;' value='Maryland' />
                <alias key='&quot;ME&quot;' value='Maine' />
                <alias key='&quot;MI&quot;' value='Michigan' />
                <alias key='&quot;MN&quot;' value='Minnesota' />
                <alias key='&quot;MO&quot;' value='Missouri' />
                <alias key='&quot;MS&quot;' value='Mississippi' />
                <alias key='&quot;MT&quot;' value='Montana' />
                <alias key='&quot;NC&quot;' value='North Carolina' />
                <alias key='&quot;ND&quot;' value='North Dakota' />
                <alias key='&quot;NE&quot;' value='Nebraska' />
                <alias key='&quot;NH&quot;' value='New Hampshire' />
                <alias key='&quot;NJ&quot;' value='New Jersey' />
                <alias key='&quot;NM&quot;' value='New Mexico' />
                <alias key='&quot;NV&quot;' value='Nevada' />
                <alias key='&quot;NY&quot;' value='New York' />
                <alias key='&quot;OH&quot;' value='Ohio' />
                <alias key='&quot;OK&quot;' value='Oklahoma' />
                <alias key='&quot;OR&quot;' value='Oregon' />
                <alias key='&quot;PA&quot;' value='Pennsylvania' />
                <alias key='&quot;RI&quot;' value='Rhode Island' />
                <alias key='&quot;SC&quot;' value='South Carolina' />
                <alias key='&quot;SD&quot;' value='South Dakota' />
                <alias key='&quot;TN&quot;' value='Tennessee' />
                <alias key='&quot;TX&quot;' value='Texas' />
                <alias key='&quot;UT&quot;' value='Utah' />
                <alias key='&quot;VA&quot;' value='Virginia' />
                <alias key='&quot;VT&quot;' value='Vermont' />
                <alias key='&quot;WA&quot;' value='Washington' />
                <alias key='&quot;WI&quot;' value='Wisconsin' />
                <alias key='&quot;WV&quot;' value='West Virginia' />
                <alias key='&quot;WY&quot;' value='Wyoming' />
              </aliases>
            </column>
            <column caption='State Governing Party' datatype='string' name='[state_governing_party]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[votes20_Donald_Trump]' derivation='Sum' name='[sum:votes20_Donald_Trump:qk]' pivot='key' type='quantitative' />
            <column-instance column='[votes20_Joe_Biden]' derivation='Sum' name='[sum:votes20_Joe_Biden:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1642758393157255168]' derivation='User' name='[usr:Calculation_1642758393157255168:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1642758393158111233]' derivation='User' name='[usr:Calculation_1642758393158111233:qk]' pivot='key' type='quantitative' />
            <column caption='votes20 Donald Trump' datatype='integer' name='[votes20_Donald_Trump]' role='measure' type='quantitative' />
            <column caption='votes20 Joe Biden' datatype='integer' name='[votes20_Joe_Biden]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.17byxqo0apwjvg1e95pdt1mp846j'>
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AK&quot;' value='Alaska' />
                <alias key='&quot;AL&quot;' value='Alabama' />
                <alias key='&quot;AR&quot;' value='Arkansas' />
                <alias key='&quot;AZ&quot;' value='Arizona' />
                <alias key='&quot;CA&quot;' value='California' />
                <alias key='&quot;CO&quot;' value='Colorado' />
                <alias key='&quot;CT&quot;' value='Connecticut' />
                <alias key='&quot;DC&quot;' value='District of Columbia' />
                <alias key='&quot;DE&quot;' value='Delaware' />
                <alias key='&quot;FL&quot;' value='Florida' />
                <alias key='&quot;GA&quot;' value='Georgia' />
                <alias key='&quot;HI&quot;' value='Hawaii' />
                <alias key='&quot;IA&quot;' value='Iowa' />
                <alias key='&quot;ID&quot;' value='Idaho' />
                <alias key='&quot;IL&quot;' value='Illinois' />
                <alias key='&quot;IN&quot;' value='Indiana' />
                <alias key='&quot;KS&quot;' value='Kansas' />
                <alias key='&quot;KY&quot;' value='Kentucky' />
                <alias key='&quot;LA&quot;' value='Louisiana' />
                <alias key='&quot;MA&quot;' value='Massachusetts' />
                <alias key='&quot;MD&quot;' value='Maryland' />
                <alias key='&quot;ME&quot;' value='Maine' />
                <alias key='&quot;MI&quot;' value='Michigan' />
                <alias key='&quot;MN&quot;' value='Minnesota' />
                <alias key='&quot;MO&quot;' value='Missouri' />
                <alias key='&quot;MS&quot;' value='Mississippi' />
                <alias key='&quot;MT&quot;' value='Montana' />
                <alias key='&quot;NC&quot;' value='North Carolina' />
                <alias key='&quot;ND&quot;' value='North Dakota' />
                <alias key='&quot;NE&quot;' value='Nebraska' />
                <alias key='&quot;NH&quot;' value='New Hampshire' />
                <alias key='&quot;NJ&quot;' value='New Jersey' />
                <alias key='&quot;NM&quot;' value='New Mexico' />
                <alias key='&quot;NV&quot;' value='Nevada' />
                <alias key='&quot;NY&quot;' value='New York' />
                <alias key='&quot;OH&quot;' value='Ohio' />
                <alias key='&quot;OK&quot;' value='Oklahoma' />
                <alias key='&quot;OR&quot;' value='Oregon' />
                <alias key='&quot;PA&quot;' value='Pennsylvania' />
                <alias key='&quot;RI&quot;' value='Rhode Island' />
                <alias key='&quot;SC&quot;' value='South Carolina' />
                <alias key='&quot;SD&quot;' value='South Dakota' />
                <alias key='&quot;TN&quot;' value='Tennessee' />
                <alias key='&quot;TX&quot;' value='Texas' />
                <alias key='&quot;UT&quot;' value='Utah' />
                <alias key='&quot;VA&quot;' value='Virginia' />
                <alias key='&quot;VT&quot;' value='Vermont' />
                <alias key='&quot;WA&quot;' value='Washington' />
                <alias key='&quot;WI&quot;' value='Wisconsin' />
                <alias key='&quot;WV&quot;' value='West Virginia' />
                <alias key='&quot;WY&quot;' value='Wyoming' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Action (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Action (state)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Continental States Filter]' />
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Trump Won State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Continental States Filter]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Action (State)]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Action (state)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Longitude (generated)]' field-type='quantitative' max='-7116883.6242765887' min='-14189188.985558527' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Latitude (generated)]' field-type='quantitative' max='7344369.0332855955' min='868734.80498637632' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]' value='Election Winner'>
              <formatted-text>
                <run>Election Winner</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]' />
              <lod column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]' />
              <lod column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[attr:state_governing_party:nk]' />
              <lod column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:votes20_Donald_Trump:qk]' />
              <lod column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:votes20_Joe_Biden:qk]' />
              <lod column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]' />
              <geometry column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14'>State:&#9;</run>
                <run bold='true' fontsize='14'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11'>Governing Party:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[attr:state_governing_party:nk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'>COVID Data:</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Cases per 100&apos;000:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Calculation_6762717850057240577:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Deaths per 100&apos;000:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'>Election Data:</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Donald Trump:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:votes20_Donald_Trump:qk]> votes]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Joe Biden:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:votes20_Joe_Biden:qk]> votes]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Election" maxwidth="300" maxheight="175" filter="<All Fields>">]]></run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Latitude (generated)]</rows>
        <cols>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Longitude (generated)]</cols>
        <join-lod-exclude-overrides>
          <column>[federated.17byxqo0apwjvg1e95pdt1mp846j].[state]</column>
        </join-lod-exclude-overrides>
      </table>
      <simple-id uuid='{08C405C7-D7A1-438E-B16B-B1D2B23C45A0}' />
    </worksheet>
    <worksheet name='Map_Cases_AK'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Alaska</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='outputfinal' name='federated.05l3lsc1hriqho1g4od7f0wiri4d' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.05l3lsc1hriqho1g4od7f0wiri4d'>
            <column caption='Cases / 100&apos;000' datatype='real' name='[Calculation_1642758393157255168]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([cases])/SUM([TotalPop])*100000' />
            </column>
            <column caption='Deaths / 100&apos;000' datatype='real' name='[Calculation_1642758393158111233]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([deaths])/SUM([TotalPop])*100000' />
            </column>
            <column caption='Alaska Filter' datatype='boolean' name='[Calculation_6762717850057240577]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[state] = &quot;AK&quot; AND { FIXED : COUNTD( IF [Continental States Filter] THEN [state] END) } &gt; 1' />
            </column>
            <column caption='Total Pop' datatype='integer' name='[TotalPop]' role='measure' type='quantitative' />
            <column datatype='boolean' name='[Trump Won State]' role='dimension' type='nominal'>
              <aliases>
                <alias key='false' value='Biden' />
                <alias key='true' value='Trump' />
              </aliases>
            </column>
            <column-instance column='[state_governing_party]' derivation='Attribute' name='[attr:state_governing_party:nk]' pivot='key' type='nominal' />
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_6762717850057240577]' derivation='None' name='[none:Calculation_6762717850057240577:nk]' pivot='key' type='nominal' />
            <column-instance column='[Trump Won State]' derivation='None' name='[none:Trump Won State:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AK&quot;' value='Alaska' />
                <alias key='&quot;AL&quot;' value='Alabama' />
                <alias key='&quot;AR&quot;' value='Arkansas' />
                <alias key='&quot;AZ&quot;' value='Arizona' />
                <alias key='&quot;CA&quot;' value='California' />
                <alias key='&quot;CO&quot;' value='Colorado' />
                <alias key='&quot;CT&quot;' value='Connecticut' />
                <alias key='&quot;DC&quot;' value='District of Columbia' />
                <alias key='&quot;DE&quot;' value='Delaware' />
                <alias key='&quot;FL&quot;' value='Florida' />
                <alias key='&quot;GA&quot;' value='Georgia' />
                <alias key='&quot;HI&quot;' value='Hawaii' />
                <alias key='&quot;IA&quot;' value='Iowa' />
                <alias key='&quot;ID&quot;' value='Idaho' />
                <alias key='&quot;IL&quot;' value='Illinois' />
                <alias key='&quot;IN&quot;' value='Indiana' />
                <alias key='&quot;KS&quot;' value='Kansas' />
                <alias key='&quot;KY&quot;' value='Kentucky' />
                <alias key='&quot;LA&quot;' value='Louisiana' />
                <alias key='&quot;MA&quot;' value='Massachusetts' />
                <alias key='&quot;MD&quot;' value='Maryland' />
                <alias key='&quot;ME&quot;' value='Maine' />
                <alias key='&quot;MI&quot;' value='Michigan' />
                <alias key='&quot;MN&quot;' value='Minnesota' />
                <alias key='&quot;MO&quot;' value='Missouri' />
                <alias key='&quot;MS&quot;' value='Mississippi' />
                <alias key='&quot;MT&quot;' value='Montana' />
                <alias key='&quot;NC&quot;' value='North Carolina' />
                <alias key='&quot;ND&quot;' value='North Dakota' />
                <alias key='&quot;NE&quot;' value='Nebraska' />
                <alias key='&quot;NH&quot;' value='New Hampshire' />
                <alias key='&quot;NJ&quot;' value='New Jersey' />
                <alias key='&quot;NM&quot;' value='New Mexico' />
                <alias key='&quot;NV&quot;' value='Nevada' />
                <alias key='&quot;NY&quot;' value='New York' />
                <alias key='&quot;OH&quot;' value='Ohio' />
                <alias key='&quot;OK&quot;' value='Oklahoma' />
                <alias key='&quot;OR&quot;' value='Oregon' />
                <alias key='&quot;PA&quot;' value='Pennsylvania' />
                <alias key='&quot;RI&quot;' value='Rhode Island' />
                <alias key='&quot;SC&quot;' value='South Carolina' />
                <alias key='&quot;SD&quot;' value='South Dakota' />
                <alias key='&quot;TN&quot;' value='Tennessee' />
                <alias key='&quot;TX&quot;' value='Texas' />
                <alias key='&quot;UT&quot;' value='Utah' />
                <alias key='&quot;VA&quot;' value='Virginia' />
                <alias key='&quot;VT&quot;' value='Vermont' />
                <alias key='&quot;WA&quot;' value='Washington' />
                <alias key='&quot;WI&quot;' value='Wisconsin' />
                <alias key='&quot;WV&quot;' value='West Virginia' />
                <alias key='&quot;WY&quot;' value='Wyoming' />
              </aliases>
            </column>
            <column caption='State Governing Party' datatype='string' name='[state_governing_party]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[votes20_Donald_Trump]' derivation='Sum' name='[sum:votes20_Donald_Trump:qk]' pivot='key' type='quantitative' />
            <column-instance column='[votes20_Joe_Biden]' derivation='Sum' name='[sum:votes20_Joe_Biden:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1642758393157255168]' derivation='User' name='[usr:Calculation_1642758393157255168:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1642758393158111233]' derivation='User' name='[usr:Calculation_1642758393158111233:qk]' pivot='key' type='quantitative' />
            <column caption='votes20 Donald Trump' datatype='integer' name='[votes20_Donald_Trump]' role='measure' type='quantitative' />
            <column caption='votes20 Joe Biden' datatype='integer' name='[votes20_Joe_Biden]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Action (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Action (state)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Calculation_6762717850057240577:nk]'>
            <groupfilter function='member' level='[none:Calculation_6762717850057240577:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Trump Won State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]'>
            <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Calculation_6762717850057240577:nk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Action (State)]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Action (state)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]' />
              <lod column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]' />
              <lod column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[attr:state_governing_party:nk]' />
              <lod column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:votes20_Donald_Trump:qk]' />
              <lod column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:votes20_Joe_Biden:qk]' />
              <lod column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]' />
              <geometry column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14'>State:&#9;</run>
                <run bold='true' fontsize='14'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11'>Governing Party:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[attr:state_governing_party:nk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'>COVID Data:</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Cases per 100&apos;000:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Deaths per 100&apos;000:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'>Election Data:</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Donald Trump:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:votes20_Donald_Trump:qk]> votes]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Joe Biden:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:votes20_Joe_Biden:qk]> votes]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Election" maxwidth="300" maxheight="175" filter="<All Fields>">]]></run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Latitude (generated)]</rows>
        <cols>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{8E6A28D2-3593-4B51-A850-39BC64617C46}' />
    </worksheet>
    <worksheet name='Map_Cases_Hi'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Hawaii</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='outputfinal' name='federated.05l3lsc1hriqho1g4od7f0wiri4d' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.05l3lsc1hriqho1g4od7f0wiri4d'>
            <column caption='Cases / 100&apos;000' datatype='real' name='[Calculation_1642758393157255168]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([cases])/SUM([TotalPop])*100000' />
            </column>
            <column caption='Deaths / 100&apos;000' datatype='real' name='[Calculation_1642758393158111233]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([deaths])/SUM([TotalPop])*100000' />
            </column>
            <column caption='Hawaii Filter' datatype='boolean' name='[Calculation_6762717850056929280]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[state] = &quot;HI&quot; AND { FIXED : COUNTD( IF [Continental States Filter] THEN [state] END) } &gt; 1' />
            </column>
            <column caption='Total Pop' datatype='integer' name='[TotalPop]' role='measure' type='quantitative' />
            <column datatype='boolean' name='[Trump Won State]' role='dimension' type='nominal'>
              <aliases>
                <alias key='false' value='Biden' />
                <alias key='true' value='Trump' />
              </aliases>
            </column>
            <column-instance column='[state_governing_party]' derivation='Attribute' name='[attr:state_governing_party:nk]' pivot='key' type='nominal' />
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_6762717850056929280]' derivation='None' name='[none:Calculation_6762717850056929280:nk]' pivot='key' type='nominal' />
            <column-instance column='[Trump Won State]' derivation='None' name='[none:Trump Won State:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AK&quot;' value='Alaska' />
                <alias key='&quot;AL&quot;' value='Alabama' />
                <alias key='&quot;AR&quot;' value='Arkansas' />
                <alias key='&quot;AZ&quot;' value='Arizona' />
                <alias key='&quot;CA&quot;' value='California' />
                <alias key='&quot;CO&quot;' value='Colorado' />
                <alias key='&quot;CT&quot;' value='Connecticut' />
                <alias key='&quot;DC&quot;' value='District of Columbia' />
                <alias key='&quot;DE&quot;' value='Delaware' />
                <alias key='&quot;FL&quot;' value='Florida' />
                <alias key='&quot;GA&quot;' value='Georgia' />
                <alias key='&quot;HI&quot;' value='Hawaii' />
                <alias key='&quot;IA&quot;' value='Iowa' />
                <alias key='&quot;ID&quot;' value='Idaho' />
                <alias key='&quot;IL&quot;' value='Illinois' />
                <alias key='&quot;IN&quot;' value='Indiana' />
                <alias key='&quot;KS&quot;' value='Kansas' />
                <alias key='&quot;KY&quot;' value='Kentucky' />
                <alias key='&quot;LA&quot;' value='Louisiana' />
                <alias key='&quot;MA&quot;' value='Massachusetts' />
                <alias key='&quot;MD&quot;' value='Maryland' />
                <alias key='&quot;ME&quot;' value='Maine' />
                <alias key='&quot;MI&quot;' value='Michigan' />
                <alias key='&quot;MN&quot;' value='Minnesota' />
                <alias key='&quot;MO&quot;' value='Missouri' />
                <alias key='&quot;MS&quot;' value='Mississippi' />
                <alias key='&quot;MT&quot;' value='Montana' />
                <alias key='&quot;NC&quot;' value='North Carolina' />
                <alias key='&quot;ND&quot;' value='North Dakota' />
                <alias key='&quot;NE&quot;' value='Nebraska' />
                <alias key='&quot;NH&quot;' value='New Hampshire' />
                <alias key='&quot;NJ&quot;' value='New Jersey' />
                <alias key='&quot;NM&quot;' value='New Mexico' />
                <alias key='&quot;NV&quot;' value='Nevada' />
                <alias key='&quot;NY&quot;' value='New York' />
                <alias key='&quot;OH&quot;' value='Ohio' />
                <alias key='&quot;OK&quot;' value='Oklahoma' />
                <alias key='&quot;OR&quot;' value='Oregon' />
                <alias key='&quot;PA&quot;' value='Pennsylvania' />
                <alias key='&quot;RI&quot;' value='Rhode Island' />
                <alias key='&quot;SC&quot;' value='South Carolina' />
                <alias key='&quot;SD&quot;' value='South Dakota' />
                <alias key='&quot;TN&quot;' value='Tennessee' />
                <alias key='&quot;TX&quot;' value='Texas' />
                <alias key='&quot;UT&quot;' value='Utah' />
                <alias key='&quot;VA&quot;' value='Virginia' />
                <alias key='&quot;VT&quot;' value='Vermont' />
                <alias key='&quot;WA&quot;' value='Washington' />
                <alias key='&quot;WI&quot;' value='Wisconsin' />
                <alias key='&quot;WV&quot;' value='West Virginia' />
                <alias key='&quot;WY&quot;' value='Wyoming' />
              </aliases>
            </column>
            <column caption='State Governing Party' datatype='string' name='[state_governing_party]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[votes20_Donald_Trump]' derivation='Sum' name='[sum:votes20_Donald_Trump:qk]' pivot='key' type='quantitative' />
            <column-instance column='[votes20_Joe_Biden]' derivation='Sum' name='[sum:votes20_Joe_Biden:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1642758393157255168]' derivation='User' name='[usr:Calculation_1642758393157255168:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1642758393158111233]' derivation='User' name='[usr:Calculation_1642758393158111233:qk]' pivot='key' type='quantitative' />
            <column caption='votes20 Donald Trump' datatype='integer' name='[votes20_Donald_Trump]' role='measure' type='quantitative' />
            <column caption='votes20 Joe Biden' datatype='integer' name='[votes20_Joe_Biden]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Action (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Action (state)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Calculation_6762717850056929280:nk]'>
            <groupfilter function='member' level='[none:Calculation_6762717850056929280:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Trump Won State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]'>
            <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Calculation_6762717850056929280:nk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Action (State)]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Action (state)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]' />
              <lod column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]' />
              <lod column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:votes20_Donald_Trump:qk]' />
              <lod column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:votes20_Joe_Biden:qk]' />
              <lod column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]' />
              <tooltip column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[attr:state_governing_party:nk]' />
              <geometry column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14'>State:&#9;</run>
                <run bold='true' fontsize='14'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11'>Governing Party:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[attr:state_governing_party:nk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'>COVID Data:</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Cases per 100&apos;000:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Deaths per 100&apos;000:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'>Election Data:</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Donald Trump:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:votes20_Donald_Trump:qk]> votes]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Joe Biden:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:votes20_Joe_Biden:qk]> votes]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Election" maxwidth="300" maxheight="175" filter="<All Fields>">]]></run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Latitude (generated)]</rows>
        <cols>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{62D86F6F-9CBE-4921-A061-5BC6333B9616}' />
    </worksheet>
    <worksheet name='Map_Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>COVID Deaths per 100&apos;000 Inhabitants</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='outputfinal' name='federated.05l3lsc1hriqho1g4od7f0wiri4d' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.05l3lsc1hriqho1g4od7f0wiri4d'>
            <column caption='Cases / 100&apos;000' datatype='real' name='[Calculation_1642758393157255168]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([cases])/SUM([TotalPop])*100000' />
            </column>
            <column caption='Deaths / 100&apos;000' datatype='real' name='[Calculation_1642758393158111233]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([deaths])/SUM([TotalPop])*100000' />
            </column>
            <column caption='Total Pop' datatype='integer' name='[TotalPop]' role='measure' type='quantitative' />
            <column datatype='boolean' name='[Trump Won State]' role='dimension' type='nominal'>
              <aliases>
                <alias key='false' value='Biden' />
                <alias key='true' value='Trump' />
              </aliases>
            </column>
            <column-instance column='[state_governing_party]' derivation='Attribute' name='[attr:state_governing_party:nk]' pivot='key' type='nominal' />
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[Trump Won State]' derivation='None' name='[none:Trump Won State:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AK&quot;' value='Alaska' />
                <alias key='&quot;AL&quot;' value='Alabama' />
                <alias key='&quot;AR&quot;' value='Arkansas' />
                <alias key='&quot;AZ&quot;' value='Arizona' />
                <alias key='&quot;CA&quot;' value='California' />
                <alias key='&quot;CO&quot;' value='Colorado' />
                <alias key='&quot;CT&quot;' value='Connecticut' />
                <alias key='&quot;DC&quot;' value='District of Columbia' />
                <alias key='&quot;DE&quot;' value='Delaware' />
                <alias key='&quot;FL&quot;' value='Florida' />
                <alias key='&quot;GA&quot;' value='Georgia' />
                <alias key='&quot;HI&quot;' value='Hawaii' />
                <alias key='&quot;IA&quot;' value='Iowa' />
                <alias key='&quot;ID&quot;' value='Idaho' />
                <alias key='&quot;IL&quot;' value='Illinois' />
                <alias key='&quot;IN&quot;' value='Indiana' />
                <alias key='&quot;KS&quot;' value='Kansas' />
                <alias key='&quot;KY&quot;' value='Kentucky' />
                <alias key='&quot;LA&quot;' value='Louisiana' />
                <alias key='&quot;MA&quot;' value='Massachusetts' />
                <alias key='&quot;MD&quot;' value='Maryland' />
                <alias key='&quot;ME&quot;' value='Maine' />
                <alias key='&quot;MI&quot;' value='Michigan' />
                <alias key='&quot;MN&quot;' value='Minnesota' />
                <alias key='&quot;MO&quot;' value='Missouri' />
                <alias key='&quot;MS&quot;' value='Mississippi' />
                <alias key='&quot;MT&quot;' value='Montana' />
                <alias key='&quot;NC&quot;' value='North Carolina' />
                <alias key='&quot;ND&quot;' value='North Dakota' />
                <alias key='&quot;NE&quot;' value='Nebraska' />
                <alias key='&quot;NH&quot;' value='New Hampshire' />
                <alias key='&quot;NJ&quot;' value='New Jersey' />
                <alias key='&quot;NM&quot;' value='New Mexico' />
                <alias key='&quot;NV&quot;' value='Nevada' />
                <alias key='&quot;NY&quot;' value='New York' />
                <alias key='&quot;OH&quot;' value='Ohio' />
                <alias key='&quot;OK&quot;' value='Oklahoma' />
                <alias key='&quot;OR&quot;' value='Oregon' />
                <alias key='&quot;PA&quot;' value='Pennsylvania' />
                <alias key='&quot;RI&quot;' value='Rhode Island' />
                <alias key='&quot;SC&quot;' value='South Carolina' />
                <alias key='&quot;SD&quot;' value='South Dakota' />
                <alias key='&quot;TN&quot;' value='Tennessee' />
                <alias key='&quot;TX&quot;' value='Texas' />
                <alias key='&quot;UT&quot;' value='Utah' />
                <alias key='&quot;VA&quot;' value='Virginia' />
                <alias key='&quot;VT&quot;' value='Vermont' />
                <alias key='&quot;WA&quot;' value='Washington' />
                <alias key='&quot;WI&quot;' value='Wisconsin' />
                <alias key='&quot;WV&quot;' value='West Virginia' />
                <alias key='&quot;WY&quot;' value='Wyoming' />
              </aliases>
            </column>
            <column caption='State Governing Party' datatype='string' name='[state_governing_party]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[votes20_Donald_Trump]' derivation='Sum' name='[sum:votes20_Donald_Trump:qk]' pivot='key' type='quantitative' />
            <column-instance column='[votes20_Joe_Biden]' derivation='Sum' name='[sum:votes20_Joe_Biden:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1642758393157255168]' derivation='User' name='[usr:Calculation_1642758393157255168:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1642758393158111233]' derivation='User' name='[usr:Calculation_1642758393158111233:qk]' pivot='key' type='quantitative' />
            <column caption='votes20 Donald Trump' datatype='integer' name='[votes20_Donald_Trump]' role='measure' type='quantitative' />
            <column caption='votes20 Joe Biden' datatype='integer' name='[votes20_Joe_Biden]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Action (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Action (state)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Continental States Filter]' />
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Trump Won State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Continental States Filter]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Action (State)]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Action (state)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]' palette='red_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]' value='Deaths per 100&apos;000 Inhabitants'>
              <formatted-text>
                <run>Deaths per 100&apos;000 Inhabitants</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]' />
              <lod column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]' />
              <lod column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:votes20_Donald_Trump:qk]' />
              <lod column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:votes20_Joe_Biden:qk]' />
              <lod column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]' />
              <tooltip column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[attr:state_governing_party:nk]' />
              <geometry column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14'>State:&#9;</run>
                <run bold='true' fontsize='14'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11'>Governing Party:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[attr:state_governing_party:nk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'>COVID Data:</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Cases per 100&apos;000:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Deaths per 100&apos;000:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'>Election Data:</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Donald Trump:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:votes20_Donald_Trump:qk]> votes]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Joe Biden:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:votes20_Joe_Biden:qk]> votes]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Election" maxwidth="300" maxheight="175" filter="<All Fields>">]]></run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Latitude (generated)]</rows>
        <cols>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{55FC81B2-D683-4C30-AE8E-853B26BBB687}' />
    </worksheet>
    <worksheet name='Map_Deaths_AK'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Alaska</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='outputfinal' name='federated.05l3lsc1hriqho1g4od7f0wiri4d' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.05l3lsc1hriqho1g4od7f0wiri4d'>
            <column caption='Cases / 100&apos;000' datatype='real' name='[Calculation_1642758393157255168]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([cases])/SUM([TotalPop])*100000' />
            </column>
            <column caption='Deaths / 100&apos;000' datatype='real' name='[Calculation_1642758393158111233]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([deaths])/SUM([TotalPop])*100000' />
            </column>
            <column caption='Alaska Filter' datatype='boolean' name='[Calculation_6762717850057240577]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[state] = &quot;AK&quot; AND { FIXED : COUNTD( IF [Continental States Filter] THEN [state] END) } &gt; 1' />
            </column>
            <column caption='Total Pop' datatype='integer' name='[TotalPop]' role='measure' type='quantitative' />
            <column datatype='boolean' name='[Trump Won State]' role='dimension' type='nominal'>
              <aliases>
                <alias key='false' value='Biden' />
                <alias key='true' value='Trump' />
              </aliases>
            </column>
            <column-instance column='[state_governing_party]' derivation='Attribute' name='[attr:state_governing_party:nk]' pivot='key' type='nominal' />
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_6762717850057240577]' derivation='None' name='[none:Calculation_6762717850057240577:nk]' pivot='key' type='nominal' />
            <column-instance column='[Trump Won State]' derivation='None' name='[none:Trump Won State:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AK&quot;' value='Alaska' />
                <alias key='&quot;AL&quot;' value='Alabama' />
                <alias key='&quot;AR&quot;' value='Arkansas' />
                <alias key='&quot;AZ&quot;' value='Arizona' />
                <alias key='&quot;CA&quot;' value='California' />
                <alias key='&quot;CO&quot;' value='Colorado' />
                <alias key='&quot;CT&quot;' value='Connecticut' />
                <alias key='&quot;DC&quot;' value='District of Columbia' />
                <alias key='&quot;DE&quot;' value='Delaware' />
                <alias key='&quot;FL&quot;' value='Florida' />
                <alias key='&quot;GA&quot;' value='Georgia' />
                <alias key='&quot;HI&quot;' value='Hawaii' />
                <alias key='&quot;IA&quot;' value='Iowa' />
                <alias key='&quot;ID&quot;' value='Idaho' />
                <alias key='&quot;IL&quot;' value='Illinois' />
                <alias key='&quot;IN&quot;' value='Indiana' />
                <alias key='&quot;KS&quot;' value='Kansas' />
                <alias key='&quot;KY&quot;' value='Kentucky' />
                <alias key='&quot;LA&quot;' value='Louisiana' />
                <alias key='&quot;MA&quot;' value='Massachusetts' />
                <alias key='&quot;MD&quot;' value='Maryland' />
                <alias key='&quot;ME&quot;' value='Maine' />
                <alias key='&quot;MI&quot;' value='Michigan' />
                <alias key='&quot;MN&quot;' value='Minnesota' />
                <alias key='&quot;MO&quot;' value='Missouri' />
                <alias key='&quot;MS&quot;' value='Mississippi' />
                <alias key='&quot;MT&quot;' value='Montana' />
                <alias key='&quot;NC&quot;' value='North Carolina' />
                <alias key='&quot;ND&quot;' value='North Dakota' />
                <alias key='&quot;NE&quot;' value='Nebraska' />
                <alias key='&quot;NH&quot;' value='New Hampshire' />
                <alias key='&quot;NJ&quot;' value='New Jersey' />
                <alias key='&quot;NM&quot;' value='New Mexico' />
                <alias key='&quot;NV&quot;' value='Nevada' />
                <alias key='&quot;NY&quot;' value='New York' />
                <alias key='&quot;OH&quot;' value='Ohio' />
                <alias key='&quot;OK&quot;' value='Oklahoma' />
                <alias key='&quot;OR&quot;' value='Oregon' />
                <alias key='&quot;PA&quot;' value='Pennsylvania' />
                <alias key='&quot;RI&quot;' value='Rhode Island' />
                <alias key='&quot;SC&quot;' value='South Carolina' />
                <alias key='&quot;SD&quot;' value='South Dakota' />
                <alias key='&quot;TN&quot;' value='Tennessee' />
                <alias key='&quot;TX&quot;' value='Texas' />
                <alias key='&quot;UT&quot;' value='Utah' />
                <alias key='&quot;VA&quot;' value='Virginia' />
                <alias key='&quot;VT&quot;' value='Vermont' />
                <alias key='&quot;WA&quot;' value='Washington' />
                <alias key='&quot;WI&quot;' value='Wisconsin' />
                <alias key='&quot;WV&quot;' value='West Virginia' />
                <alias key='&quot;WY&quot;' value='Wyoming' />
              </aliases>
            </column>
            <column caption='State Governing Party' datatype='string' name='[state_governing_party]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[votes20_Donald_Trump]' derivation='Sum' name='[sum:votes20_Donald_Trump:qk]' pivot='key' type='quantitative' />
            <column-instance column='[votes20_Joe_Biden]' derivation='Sum' name='[sum:votes20_Joe_Biden:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1642758393157255168]' derivation='User' name='[usr:Calculation_1642758393157255168:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1642758393158111233]' derivation='User' name='[usr:Calculation_1642758393158111233:qk]' pivot='key' type='quantitative' />
            <column caption='votes20 Donald Trump' datatype='integer' name='[votes20_Donald_Trump]' role='measure' type='quantitative' />
            <column caption='votes20 Joe Biden' datatype='integer' name='[votes20_Joe_Biden]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Action (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Action (state)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Calculation_6762717850057240577:nk]'>
            <groupfilter function='member' level='[none:Calculation_6762717850057240577:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Trump Won State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]'>
            <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Calculation_6762717850057240577:nk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Action (State)]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Action (state)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]' palette='red_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]' />
              <lod column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]' />
              <lod column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:votes20_Donald_Trump:qk]' />
              <lod column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:votes20_Joe_Biden:qk]' />
              <lod column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]' />
              <tooltip column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[attr:state_governing_party:nk]' />
              <geometry column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14'>State:&#9;</run>
                <run bold='true' fontsize='14'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11'>Governing Party:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[attr:state_governing_party:nk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'>COVID Data:</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Cases per 100&apos;000:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Deaths per 100&apos;000:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'>Election Data:</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Donald Trump:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:votes20_Donald_Trump:qk]> votes]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Joe Biden:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:votes20_Joe_Biden:qk]> votes]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Election" maxwidth="300" maxheight="175" filter="<All Fields>">]]></run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Latitude (generated)]</rows>
        <cols>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6DD35ABF-33DB-4B02-A96C-582BD78E1B18}' />
    </worksheet>
    <worksheet name='Map_Deaths_Hi'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Hawaii</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='outputfinal' name='federated.05l3lsc1hriqho1g4od7f0wiri4d' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.05l3lsc1hriqho1g4od7f0wiri4d'>
            <column caption='Cases / 100&apos;000' datatype='real' name='[Calculation_1642758393157255168]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([cases])/SUM([TotalPop])*100000' />
            </column>
            <column caption='Deaths / 100&apos;000' datatype='real' name='[Calculation_1642758393158111233]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([deaths])/SUM([TotalPop])*100000' />
            </column>
            <column caption='Hawaii Filter' datatype='boolean' name='[Calculation_6762717850056929280]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[state] = &quot;HI&quot; AND { FIXED : COUNTD( IF [Continental States Filter] THEN [state] END) } &gt; 1' />
            </column>
            <column caption='Total Pop' datatype='integer' name='[TotalPop]' role='measure' type='quantitative' />
            <column datatype='boolean' name='[Trump Won State]' role='dimension' type='nominal'>
              <aliases>
                <alias key='false' value='Biden' />
                <alias key='true' value='Trump' />
              </aliases>
            </column>
            <column-instance column='[state_governing_party]' derivation='Attribute' name='[attr:state_governing_party:nk]' pivot='key' type='nominal' />
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_6762717850056929280]' derivation='None' name='[none:Calculation_6762717850056929280:nk]' pivot='key' type='nominal' />
            <column-instance column='[Trump Won State]' derivation='None' name='[none:Trump Won State:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AK&quot;' value='Alaska' />
                <alias key='&quot;AL&quot;' value='Alabama' />
                <alias key='&quot;AR&quot;' value='Arkansas' />
                <alias key='&quot;AZ&quot;' value='Arizona' />
                <alias key='&quot;CA&quot;' value='California' />
                <alias key='&quot;CO&quot;' value='Colorado' />
                <alias key='&quot;CT&quot;' value='Connecticut' />
                <alias key='&quot;DC&quot;' value='District of Columbia' />
                <alias key='&quot;DE&quot;' value='Delaware' />
                <alias key='&quot;FL&quot;' value='Florida' />
                <alias key='&quot;GA&quot;' value='Georgia' />
                <alias key='&quot;HI&quot;' value='Hawaii' />
                <alias key='&quot;IA&quot;' value='Iowa' />
                <alias key='&quot;ID&quot;' value='Idaho' />
                <alias key='&quot;IL&quot;' value='Illinois' />
                <alias key='&quot;IN&quot;' value='Indiana' />
                <alias key='&quot;KS&quot;' value='Kansas' />
                <alias key='&quot;KY&quot;' value='Kentucky' />
                <alias key='&quot;LA&quot;' value='Louisiana' />
                <alias key='&quot;MA&quot;' value='Massachusetts' />
                <alias key='&quot;MD&quot;' value='Maryland' />
                <alias key='&quot;ME&quot;' value='Maine' />
                <alias key='&quot;MI&quot;' value='Michigan' />
                <alias key='&quot;MN&quot;' value='Minnesota' />
                <alias key='&quot;MO&quot;' value='Missouri' />
                <alias key='&quot;MS&quot;' value='Mississippi' />
                <alias key='&quot;MT&quot;' value='Montana' />
                <alias key='&quot;NC&quot;' value='North Carolina' />
                <alias key='&quot;ND&quot;' value='North Dakota' />
                <alias key='&quot;NE&quot;' value='Nebraska' />
                <alias key='&quot;NH&quot;' value='New Hampshire' />
                <alias key='&quot;NJ&quot;' value='New Jersey' />
                <alias key='&quot;NM&quot;' value='New Mexico' />
                <alias key='&quot;NV&quot;' value='Nevada' />
                <alias key='&quot;NY&quot;' value='New York' />
                <alias key='&quot;OH&quot;' value='Ohio' />
                <alias key='&quot;OK&quot;' value='Oklahoma' />
                <alias key='&quot;OR&quot;' value='Oregon' />
                <alias key='&quot;PA&quot;' value='Pennsylvania' />
                <alias key='&quot;RI&quot;' value='Rhode Island' />
                <alias key='&quot;SC&quot;' value='South Carolina' />
                <alias key='&quot;SD&quot;' value='South Dakota' />
                <alias key='&quot;TN&quot;' value='Tennessee' />
                <alias key='&quot;TX&quot;' value='Texas' />
                <alias key='&quot;UT&quot;' value='Utah' />
                <alias key='&quot;VA&quot;' value='Virginia' />
                <alias key='&quot;VT&quot;' value='Vermont' />
                <alias key='&quot;WA&quot;' value='Washington' />
                <alias key='&quot;WI&quot;' value='Wisconsin' />
                <alias key='&quot;WV&quot;' value='West Virginia' />
                <alias key='&quot;WY&quot;' value='Wyoming' />
              </aliases>
            </column>
            <column caption='State Governing Party' datatype='string' name='[state_governing_party]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[votes20_Donald_Trump]' derivation='Sum' name='[sum:votes20_Donald_Trump:qk]' pivot='key' type='quantitative' />
            <column-instance column='[votes20_Joe_Biden]' derivation='Sum' name='[sum:votes20_Joe_Biden:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1642758393157255168]' derivation='User' name='[usr:Calculation_1642758393157255168:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1642758393158111233]' derivation='User' name='[usr:Calculation_1642758393158111233:qk]' pivot='key' type='quantitative' />
            <column caption='votes20 Donald Trump' datatype='integer' name='[votes20_Donald_Trump]' role='measure' type='quantitative' />
            <column caption='votes20 Joe Biden' datatype='integer' name='[votes20_Joe_Biden]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Action (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Action (state)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Calculation_6762717850056929280:nk]'>
            <groupfilter function='member' level='[none:Calculation_6762717850056929280:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Trump Won State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]'>
            <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Calculation_6762717850056929280:nk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Action (state)]</column>
            <column>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]' palette='red_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]' />
              <lod column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]' />
              <lod column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:votes20_Donald_Trump:qk]' />
              <lod column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:votes20_Joe_Biden:qk]' />
              <lod column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]' />
              <tooltip column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[attr:state_governing_party:nk]' />
              <geometry column='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14'>State:&#9;</run>
                <run bold='true' fontsize='14'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11'>Governing Party:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[attr:state_governing_party:nk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'>COVID Data:</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Cases per 100&apos;000:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Deaths per 100&apos;000:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'>Election Data:</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Donald Trump:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:votes20_Donald_Trump:qk]> votes]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Joe Biden:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:votes20_Joe_Biden:qk]> votes]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Election" maxwidth="300" maxheight="175" filter="<All Fields>">]]></run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Latitude (generated)]</rows>
        <cols>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{88743CAA-006E-45AF-AB82-106F149C5397}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>2020 Presidential Elections and COVID-19</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='outputfinal' name='federated.05l3lsc1hriqho1g4od7f0wiri4d' />
      </datasources>
      <datasource-dependencies datasource='federated.05l3lsc1hriqho1g4od7f0wiri4d'>
        <column caption='Cases / 100&apos;000' datatype='real' name='[Calculation_1642758393157255168]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='SUM([cases])/SUM([TotalPop])*100000' />
        </column>
        <column caption='Deaths / 100&apos;000' datatype='real' name='[Calculation_1642758393158111233]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='SUM([deaths])/SUM([TotalPop])*100000' />
        </column>
        <column datatype='boolean' name='[Trump Won State]' role='dimension' type='nominal'>
          <aliases>
            <alias key='false' value='Biden' />
            <alias key='true' value='Trump' />
          </aliases>
        </column>
        <column-instance column='[Trump Won State]' derivation='None' name='[none:Trump Won State:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_1642758393157255168]' derivation='User' name='[usr:Calculation_1642758393157255168:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Calculation_1642758393158111233]' derivation='User' name='[usr:Calculation_1642758393158111233:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='30' param='vert' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5250' id='31' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92750' id='7' param='horz' w='98400' x='800' y='6250'>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92750' id='5' w='82400' x='800' y='6250'>
                <zone h='52644' id='3' name='Map_Cases' w='41200' x='800' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='52644' id='9' name='Map_Deaths' w='41200' x='42000' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='40106' id='11' name='Cases-Vote' w='41200' x='800' y='58894'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='40106' id='13' name='Deaths-Vote' w='41200' x='42000' y='58894'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' fixed-size='160' h='92750' id='19' is-fixed='true' w='16000' x='83200' y='6250'>
                <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='52644' id='6' param='vert' w='16000' x='83200' y='6250'>
                  <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='11125' id='21' name='Map_Cases' param='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]' values='database' w='16000' x='83200' y='6250'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='8' name='Map_Cases' pane-specification-id='0' param='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]' w='16000' x='83200' y='17375'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='10' name='Map_Deaths' pane-specification-id='0' param='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]' w='16000' x='83200' y='25500'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='8625' id='38' name='Map_Deaths' param='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]' values='database' w='16000' x='83200' y='33625'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='8625' id='39' name='Map_Deaths' param='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]' values='database' w='16000' x='83200' y='42250'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='40106' id='20' param='vert' w='16000' x='83200' y='58894'>
                  <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='8250' id='18' param='vert' w='16000' x='83200' y='58894'>
                    <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8250' id='12' name='Cases-Vote' pane-specification-id='0' param='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]' w='16000' x='83200' y='58894'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='13750' id='15' name='Map_Cases_Hi' w='17700' x='23800' y='44375' />
        <zone h='17750' id='16' name='Map_Deaths_AK' w='15500' x='42400' y='40625' />
        <zone h='13750' id='17' name='Map_Deaths_Hi' w='18800' x='64200' y='44875' />
        <zone h='19000' id='22' name='Map_Cases_AK' w='19900' x='1200' y='39250' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>2020 Presidential Elections and COVID-19</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2200' minheight='2200' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='55' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='54' param='vert' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5250' id='31' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='11125' id='21' mode='checkdropdown' name='Map_Cases' param='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]' values='database' w='16000' x='83200' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52644' id='3' is-fixed='true' name='Map_Cases' w='41200' x='800' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='8' name='Map_Cases' pane-specification-id='0' param='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]' w='16000' x='83200' y='17375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='8625' id='38' name='Map_Deaths' param='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]' values='database' w='16000' x='83200' y='33625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='8625' id='39' name='Map_Deaths' param='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]' values='database' w='16000' x='83200' y='42250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52644' id='9' is-fixed='true' name='Map_Deaths' w='41200' x='42000' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='10' name='Map_Deaths' pane-specification-id='0' param='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]' w='16000' x='83200' y='25500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='152' h='19000' id='22' is-fixed='true' name='Map_Cases_AK' w='19900' x='1200' y='39250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='142' h='17750' id='16' is-fixed='true' name='Map_Deaths_AK' w='15500' x='42400' y='40625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='110' h='13750' id='15' is-fixed='true' name='Map_Cases_Hi' w='17700' x='23800' y='44375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='110' h='13750' id='17' is-fixed='true' name='Map_Deaths_Hi' w='18800' x='64200' y='44875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40106' id='11' is-fixed='true' name='Cases-Vote' w='41200' x='800' y='58894'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8250' id='12' name='Cases-Vote' pane-specification-id='0' param='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]' w='16000' x='83200' y='58894'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40106' id='13' is-fixed='true' name='Deaths-Vote' w='41200' x='42000' y='58894'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4BDF6EB1-1202-4A35-A683-5E5E00B98BFF}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Map_Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Continental States Filter]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[attr:Trump Won State:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:county:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:county_party:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state_governing_party:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:deaths:qk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{0434DB4C-AE1A-4DC2-95B4-80EB3E9DA2A1}' />
    </window>
    <window class='worksheet' name='Map_Cases_AK'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Continental States Filter]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[attr:Trump Won State:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Calculation_6762717850057240577:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:county:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:county_party:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state_governing_party:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:deaths:qk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{60D9F9DB-5CDC-48C2-AD65-1E9FE97E4659}' />
    </window>
    <window class='worksheet' name='Map_Cases_Hi'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Continental States Filter]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[attr:Trump Won State:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[attr:state_governing_party:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Calculation_6762717850056929280:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Calculation_6762717850057240577:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:county:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:county_party:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state_governing_party:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:deaths:qk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393157255168:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{C7AFD9DB-BDE9-426A-95F5-4709BEEF0572}' />
    </window>
    <window class='worksheet' name='Map_Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Continental States Filter]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[attr:Trump Won State:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[attr:state_governing_party:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:county:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:county_party:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state_governing_party:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:deaths:qk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{A2D68C3A-29BB-4DE4-806B-7211BA6D6ACC}' />
    </window>
    <window class='worksheet' name='Map_Deaths_AK'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Continental States Filter]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[attr:Trump Won State:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Calculation_6762717850057240577:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:county:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:county_party:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state_governing_party:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:deaths:qk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{289E517D-80C4-471F-B644-247AFCB736CF}' />
    </window>
    <window class='worksheet' name='Map_Deaths_Hi'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[Continental States Filter]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[attr:Trump Won State:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Calculation_6762717850056929280:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Calculation_6762717850057240577:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:county:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:county_party:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state_governing_party:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[sum:deaths:qk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[usr:Calculation_1642758393158111233:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{EDFB9B9D-5138-486B-BE0A-87C46B75BAFE}' />
    </window>
    <window class='worksheet' name='Cases-Vote'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump won:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:county_party:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state_governing_party:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DFBCEBDB-900D-4804-8D8A-4C088B4F0A92}' />
    </window>
    <window class='worksheet' name='Deaths-Vote'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump won:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:county_party:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state_governing_party:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{774CCB76-C596-42C5-B095-2A2971C91F26}' />
    </window>
    <window class='worksheet' name='Election'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05l3lsc1hriqho1g4od7f0wiri4d].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[:Measure Names]</field>
            <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1EB64E94-46F0-4785-AAB4-075F28082DE4}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard'>
      <viewpoints>
        <viewpoint name='Cases-Vote'>
          <highlight>
            <color-one-way>
              <field>[federated.05l3lsc1hriqho1g4od7f0wiri4d].[none:Trump Won State:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Deaths-Vote' />
        <viewpoint name='Map_Cases'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='Map_Cases_AK'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map_Cases_Hi'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map_Deaths'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='Map_Deaths_AK'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map_Deaths_Hi'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{83BC061F-650C-4DEE-A2FD-920AF391269E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='286' name='Cases-Vote' width='384'>
      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
      DwHA+iwAgKjfcf+1UMwDLJoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Dashboard' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d5xU1d0//r53etvZDru0pQiogIKosYACGswXy+PLJ5oYYw2PNYktFoIt
      KCaamMQSNRo14dGYqI8VY0ERRGxUXUBggWV3gW2zu9PbnXt+f4zncObObTO7K/pj3q8XunPv
      Pf2cTzuf8zkCIYSghBJKKKGEgw7iga5ACSWUUEIJBwYlBlBCCSWUcJCixABKKKGEEg5SlBhA
      CSWUUMJBihIDKKGEEko4SFFiACWUUEIJBylKDKCEEkoo4SBFiQGUUEIJJRykKDEAA6TTaYRC
      oQNah66uroLTxGIxRKPRQajNdwffhrEroYRvM6xGH8TjcSxZsgSrV6+GLMs49thjMX/+fNjt
      dgDA8uXL8fTTTyOZTOL000/HBRdcAEEQQAjBG2+8gTfffBPBYBDjx4/HlVdeiSFDhgAAduzY
      gQceeADt7e2YNm0arrvuOrjd7pyyt2/fjqeeeipbUasVI0aMwNlnn42ampoB7YSHHnoIc+bM
      wWGHHZb3bt26dXj//fdx6623Fp1/KpWCJEk57du+fTtef/11XH/99Ybp58+fj1deeSXv+WOP
      PYbdu3fnPJs3bx5OPPFELF26FKlUCj/5yU8OSJ2/DdAbu87OTjz11FPYunUr/H4/5s2bh1NP
      PRUA0NPTg7/85S/YsGEDHA4H5s6diwsuuACiKOL9998HIQRz5szJye/FF1/EhAkTMHnyZKxY
      sQJOpxPHHnssgP3jJIoiqqurMWfOHEyZMkW37oFAAE8//TSmT5+Ok08+mT3v7e3FQw89hI0b
      N6K6uhpXX321YV4llKAFQw3glltugcViwX333Yc//elP6OjowDPPPAMA2LZtG/70pz9h0aJF
      +Otf/4qVK1di6dKlAIAnn3wSa9euxY033ognnngCEydOxO233w4ASCQSuP7663Heeefh+eef
      h9PpxP33359XdiAQQDKZxGWXXYbzzjsPbrcbl156KYLB4AB2AXD00UczxjQYeO+997BkyZKc
      Z5WVlTj++OP7le9nn32G//qv/8Jll13G/k2aNKlfeVIMVp2/Dejt7cX8+fPR0NCA3//+97jy
      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
      gQBZvXo1ef3111kfvvnmm2Tp0qV5z2VZJl9++SV56623yKZNm1iev/zlL0ljYyN5/fXXyZ49
      e3LGIZ1Ok5aWFnL99deTt956i6xZs4ZEo1GSSCTIJ598Qt5+++2cNE1NTaS9vZ28/vrrZM2a
      NYQQQjZt2kQuvPBCsmbNGrJ+/Xo2DmpjfyBwoNcNIYRcfvnl7O+2tjZy4YUXknQ6TQghpLe3
      l7zyyivko48+IrIsE0KIav+rjdOiRYtIc3Mzeeedd8iyZctYnnr9HwgEyN69e8lbb71FVqxY
      wdYrIfnriZDsmNO5xT//LqwnQgi58sorWZ+0tLSQLVu2kFdffZXs2rWLEEJIR0cHueeee8jm
      zZvJq6++Spqbmwkh2utp0aJF5IsvviCvvfZazvPu7m7S29urOk5aeTU3N5NgMEjeeecd8u67
      75J0Ok00NYDNmzfjiCOOyFMx1q9fj1NPPZX9ttlsmDZtGnbu3Ina2lokEgkm6S1fvtzUfalz
      5szB1q1bc65B1Co/FovhH//4B1KpFL744gssXrwYQPbu37a2NoTDYTz77LMAsqrwn/70JwwZ
      MgTPPPMMVq9ejVQqheuuuw7JZBI7duzAW2+9lZP/kiVL8Je//AUOhwNLlizBa6+9BgB4/vnn
      sXz5clRUVGDhwoUIBALo6+vD448/jmuvvRafffYZuxoTAE466STV6xGDwSC7WnDEiBHsSkWt
      5+Xl5ay/C02r9VwNn376Ka6++mo0NzdDkiQsWrQop0+am5uRTqdxzz33AAA2btyIFStWsPdL
      ly4FkJWwPvroI9jtdtx8881obW0FAPztb39DJBJBd3c3+vr6sHv3buzYsQOpVApvvvkmtm/f
      DlmWsWDBAqZxLFy4EI8//jicTieefvppbNmyBa2trYhEItixYweam5s1x/5A4UCvGyWGDRuG
      iRMnYuvWrYhGo/jVr34Fn8+HxsZGPProowCg2v9q4wQADzzwAFKpFDZs2IB///vfAPT7/9NP
      P8Utt9wCSZKwadMmNq/U1hOQ1e7uv/9+vPjii4jFYiyf79p66uvrw+WXX45ly5bB7XZjwYIF
      jD58+OGHeO+99+B2u3Hrrbcik8loricgeyWpx+PBk08+iXfeeYflsXbtWtVx0spryZIluO22
      25BKpfDll1/iX//6l/aVkKFQCFVVVaodXl5envPM7/czVXTmzJlYtWoVTjvtNHzyySf40Y9+
      pNlJPHw+H1KpFLsZTKt82ml79uzBmDFj8MADD7DvJ02ahEmTJjGb54svvoibb74ZdXV1mDRp
      EhYvXowpU6ZAFEVMmzZN8yq9a6+9FtXV1Zg5cyZuuOEGnHnmmfjggw/YtYiSJGHZsmWYNWsW
      PvroIzz++OMYP368qXYq732lv7Wez5w5s+i0Ws+1cPHFF2Pu3LkAskRI7fkHH3wAIHvP8MSJ
      E7Fnzx54vV689957mDdvHoYOHYr/+Z//AZC9V/jtt99ml6kD2esvDznkEMybN49dyXn22Wcj
      GAyio6MDJ554Ir788kuMHDkSQ4YMwe233w4gexdue3s7u7P33HPPZXmqjf2BwoFeN2qora1F
      MBjE+++/j7POOguzZ8/G7NmzccUVVwBQ7/958+bljROQNU1VV1dj0qRJeOmll1ib9fr//PPP
      Z/PnqquuQjKZVF1P5513HlpbW3HKKafgjDPOMNX+b/N6OvHEE3HNNdcAyJoFo9EoAGDGjBns
      +fLlyxGPxzXXEwBcc801qK6uxrHHHotbb70V3//+91kZautJLy86flOmTNFnANXV1Wyx86ip
      qcG+ffswadIk9qy9vZ117OzZs/HHP/4RRx55JCorK+F0OnU7CchePRgKhXI2OrTK7+jowMKF
      CzF9+nT4/X4kk0kAwIIFC/Dcc8/hwQcfxOzZs/HjH/8YgUAAjz32GJuUlZWV8Hq9uPrqq/HI
      I4+gq6sLP/vZz3D00Uer1svpdLLrCtva2nDXXXcByF45ecwxxwDIXg5ulvgD2WsICSFsU5Be
      Kq/1vD9pzeSpBS1CSp9//PHHWLJkCY499lhkMpkc7YeiurqaTXo9PPHEE9i9ezcOPfRQtLW1
      oba21nQ9AfWxP1A40OtGDTt37sTJJ5+Mbdu2Yc2aNVizZg2ArBYiSRKefvrpb6z/KysrEY/H
      NdfTiBEjTBN/4LuznoxgZj15PB7V58XkRaHJACZOnIidO3eipaUFI0eOBJC9U/foo4/G73//
      e8yaNQtWqxXd3d3YuHEjbrrpJgDA0KFDEQqF8NZbb2HOnDmGlSWE4KmnnsLs2bNziI5W+atX
      r8YPf/hDfP/730cqlWKLraqqCjfddBMIIZg/fz7OO+88jBw5EnPnzsWUKVMAZO/ETafTOOKI
      IzB9+nREIhHceuutmgzgq6++YtLc8OHD8atf/QoejweEEEQiEcTj8YIlzlGjRmHDhg2YOnUq
      NmzYgFGjRuk+709aM3kWi6VLl2LRokWoqqpCa2srnnzyybxvVq1ahQkTJuQ9t9lsORtb69at
      Y+aIV155xbDsTCbDFiKgPvaF3E09kDjQ60aJTz/9FJFIBGPGjMHu3btBCMEll1wCILserFar
      Zv8rx0kLZvs/Go1i7969KC8vV11PgLbgoYWDaT1t3LgR9fX1ec+V42QmLwpNBiCKIm655RYs
      XLgQDQ0N6O7uxtlnn41TTz0VJ5xwAq644gpMmDABGzZswI033girdX9Wxx9/fI79HMgOLB1c
      QRDwzjvvYOvWrUgkEpg8eTJTR43KnzJlChYtWoTGxkbs2bOHNfz222+Hz+eDxWLBiBEjIIoi
      fvrTn2LhwoUYOXIkgsEgDj30UJxxxhm44447MHbsWHR0dOCkk07Ka/u9996L8vJytLa24je/
      +Q0A4JJLLsE111yDsWPHor29Heedd54qcaN49NFHsXv3bmzfvh1bt26Fz+fDwoULMX/+fNxy
      yy2YNGkSGhsb8dvf/hYANJ/zKDStUZ78mChhtBC/973v4c4770R9fT16enqYzTscDuOuu+5C
      JBKB0+nExRdfnJd25syZWLx4McaOHYvLLrsMw4YNw6JFi5BKpdDR0aEqAfL1mT59Oq6//nrU
      1dXhpptuUh37A4UDvW6ArCviL3/5S0iSBL/fj9tvvx2CIOCkk07CggULcOutt8JisSCVSuG+
      ++7T7H/lOPHgx8Oo/5999lmsW7cO27dvZ/VVW08zZszQ7NfvwnpS9kshz7XWk91ux/333w+3
      2429e/fi7rvvzstDOU5aeamVa3gpPCEEgUAAPp8vx84YDofR3d2NYcOG5amg6XQasVgMfr9f
      L2tTUCs/Fouhr68PdXV1OR3b09MDSZJyVFhCCPr6+uD1epmftSzL6OjogMfjQVlZWU55d999
      Ny6++GK43W5UVFTk5C/LMnp7e1FRUdEvIpNKpbB37948/16t5/1JaybPYtHb24tMJoPq6mr2
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='286' name='Deaths-Vote' width='384'>
      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
      BgCQ1F8BGQdnPAHTmykAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Election' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Map_Cases' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Map_Cases_AK' width='384'>
      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
      IYQQYpj9f1GURKFfJ4+7AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Map_Cases_Hi' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFh0lEQVR4nO3VsY3DMAAEQdogVIHUf3dqQIrpz74DQ4B3Jrvssn2d5/mZcw4Afttaa6y1
      xr7vY9u215xzjuM4nv4FwJfd9z2u6/rf7we/APAgAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCI
      EgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgB
      AIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCA
      KAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgS
      AIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEA
      iBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAo
      AQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIA
      gCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCI
      EgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgB
      AIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCA
      KAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgS
      AIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEA
      iBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAo
      AQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIA
      gCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCI
      EgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgB
      AIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCA
      KAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgS
      AIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEA
      iBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAo
      AQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIA
      gCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCI
      EgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgB
      AIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCA
      KAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgS
      AIAoAQCIEgCAKAEAiPoDHJ8TAgLbtXUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Map_Deaths' width='384'>
      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
      YII=
    </thumbnail>
    <thumbnail height='384' name='Map_Deaths_AK' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFh0lEQVR4nO3VsY3DMAAEQdogVIHUf3dqQIrpz74DQ4B3Jrvssn2d5/mZcw4Afttaa6y1
      xr7vY9u215xzjuM4nv4FwJfd9z2u6/rf7we/APAgAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCI
      EgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgB
      AIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCA
      KAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgS
      AIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEA
      iBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAo
      AQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIA
      gCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCI
      EgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgB
      AIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCA
      KAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgS
      AIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEA
      iBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAo
      AQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIA
      gCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCI
      EgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgB
      AIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCA
      KAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgS
      AIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEA
      iBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAo
      AQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIA
      gCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCI
      EgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgB
      AIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCA
      KAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgS
      AIAoAQCIEgCAKAEAiPoDHJ8TAgLbtXUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Map_Deaths_Hi' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFh0lEQVR4nO3VsY3DMAAEQdogVIHUf3dqQIrpz74DQ4B3Jrvssn2d5/mZcw4Afttaa6y1
      xr7vY9u215xzjuM4nv4FwJfd9z2u6/rf7we/APAgAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCI
      EgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgB
      AIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCA
      KAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgS
      AIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEA
      iBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAo
      AQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIA
      gCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCI
      EgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgB
      AIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCA
      KAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgS
      AIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEA
      iBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAo
      AQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIA
      gCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCI
      EgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgB
      AIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCA
      KAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgS
      AIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEA
      iBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAo
      AQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIA
      gCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCI
      EgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgB
      AIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCA
      KAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiBIAgCgBAIgS
      AIAoAQCIEgCAKAEAiPoDHJ8TAgLbtXUAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
